
#line 1 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <windows.h>
#include <memory.h>
#include <d3d11.h>
#include "state_parser_symbols.hpp"

// HLSL RasterizerState parser


#line 2 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
static const char _rasta_man_actions[] = {
	0, 1, 2, 1, 3, 1, 66, 1, 
	67, 1, 68, 1, 69, 1, 70, 1, 
	71, 1, 72, 1, 73, 1, 74, 1, 
	75, 1, 76, 1, 77, 1, 78, 1, 
	79, 1, 80, 1, 81, 1, 82, 1, 
	83, 1, 84, 1, 85, 1, 86, 1, 
	87, 1, 88, 1, 89, 2, 0, 1, 
	2, 3, 4, 2, 3, 5, 2, 3, 
	6, 2, 3, 7, 2, 3, 8, 2, 
	3, 9, 2, 3, 10, 2, 3, 11, 
	2, 3, 12, 2, 3, 13, 2, 3, 
	14, 2, 3, 15, 2, 3, 16, 2, 
	3, 17, 2, 3, 18, 2, 3, 19, 
	2, 3, 20, 2, 3, 21, 2, 3, 
	22, 2, 3, 23, 2, 3, 24, 2, 
	3, 25, 2, 3, 26, 2, 3, 27, 
	2, 3, 28, 2, 3, 29, 2, 3, 
	30, 2, 3, 31, 2, 3, 32, 2, 
	3, 33, 2, 3, 34, 2, 3, 35, 
	2, 3, 36, 2, 3, 37, 2, 3, 
	38, 2, 3, 39, 2, 3, 40, 2, 
	3, 41, 2, 3, 42, 2, 3, 43, 
	2, 3, 44, 2, 3, 45, 2, 3, 
	46, 2, 3, 47, 2, 3, 48, 2, 
	3, 49, 2, 3, 50, 2, 3, 51, 
	2, 3, 52, 2, 3, 53, 2, 3, 
	54, 2, 3, 55, 2, 3, 56, 2, 
	3, 57, 2, 3, 58, 2, 3, 59, 
	2, 3, 60, 2, 3, 61, 2, 3, 
	62, 2, 3, 63, 2, 3, 64, 2, 
	3, 65
};

static const short _rasta_man_key_offsets[] = {
	0, 0, 5, 7, 9, 11, 13, 15, 
	17, 22, 26, 30, 80, 83, 87, 92, 
	94, 97, 99, 112, 119, 128, 139, 148, 
	157, 166, 175, 184, 193, 202, 211, 220, 
	229, 238, 247, 256, 265, 274, 283, 292, 
	301, 310, 319, 328, 337, 346, 355, 364, 
	373, 382, 391, 400, 409, 422, 431, 440, 
	449, 458, 467, 482, 491, 500, 509, 518, 
	527, 536, 545, 554, 563, 572, 581, 590, 
	599, 608, 617, 626, 635, 644, 653, 662, 
	671, 686, 695, 704, 713, 722, 733, 742, 
	751, 760, 769, 778, 787, 796, 805, 814, 
	823, 832, 843, 852, 861, 872, 881, 890, 
	899, 908, 917, 926, 935, 944, 953, 962, 
	971, 980, 989, 998, 1007, 1018, 1027, 1040, 
	1049, 1058, 1067, 1076, 1085, 1094, 1103, 1112, 
	1121, 1130, 1139, 1148, 1157, 1166, 1175, 1184, 
	1193, 1202, 1215, 1228, 1237, 1246, 1255, 1264, 
	1273, 1282, 1291, 1300, 1309, 1318, 1327, 1336, 
	1345, 1354, 1363, 1372, 1381, 1390, 1399, 1408, 
	1417, 1426, 1435, 1444, 1453, 1462, 1471, 1480, 
	1489, 1498, 1507, 1516, 1525, 1538, 1547, 1556, 
	1565, 1574, 1583, 1592, 1601, 1610, 1619, 1628, 
	1637, 1646, 1655, 1664, 1675, 1684, 1693, 1702, 
	1711, 1720, 1729, 1738, 1747, 1758, 1767, 1776, 
	1788, 1799, 1808, 1817, 1826, 1835, 1844, 1853, 
	1862, 1871, 1882, 1891, 1900, 1909, 1918, 1927, 
	1936, 1945, 1954, 1965, 1978, 1987, 1996, 2005, 
	2014, 2023, 2034, 2045, 2054, 2063, 2072, 2081, 
	2090, 2099, 2112, 2127, 2136, 2145, 2154, 2163, 
	2172, 2181, 2190, 2199, 2208, 2217, 2226, 2235, 
	2244, 2255, 2264, 2273, 2282, 2291, 2300, 2309, 
	2318, 2327, 2336, 2345, 2354, 2363, 2372, 2381, 
	2390, 2399, 2408, 2417, 2426, 2435, 2444, 2453, 
	2462, 2473, 2482, 2491, 2500, 2513, 2522, 2531, 
	2540, 2549, 2558, 2567, 2576, 2585, 2594, 2603, 
	2612, 2621, 2630, 2639, 2648, 2657, 2666, 2675, 
	2684, 2693, 2702, 2711, 2720, 2729, 2738, 2747, 
	2756, 2765, 2774, 2783, 2792, 2801, 2810, 2819, 
	2828, 2837, 2846, 2855, 2868, 2877, 2886, 2895, 
	2904, 2913, 2922, 2931, 2942, 2951, 2960, 2969, 
	2978, 2987, 2996, 3005, 3014, 3023, 3032, 3041, 
	3050, 3059, 3068, 3077, 3086, 3095, 3104, 3113, 
	3122, 3131, 3140, 3149, 3158, 3169, 3178, 3191, 
	3200, 3209, 3218, 3227, 3236, 3245, 3254, 3263, 
	3272, 3281, 3290, 3299, 3308, 3317, 3326, 3335, 
	3344, 3353, 3362, 3371, 3380, 3389, 3398, 3409, 
	3418, 3427, 3436, 3445, 3454, 3463, 3472, 3481, 
	3490, 3499, 3508, 3517, 3526, 3535, 3546, 3555, 
	3564, 3573, 3582, 3591, 3600, 3609, 3618, 3627, 
	3636, 3645, 3654, 3663, 3672, 3681, 3690, 3699, 
	3708, 3717, 3726, 3735, 3744, 3753, 3762, 3771, 
	3780, 3789, 3798, 3807, 3816, 3831, 3840, 3849, 
	3858, 3867, 3876, 3885, 3894, 3903, 3912, 3921, 
	3930, 3939, 3948, 3957, 3966, 3980, 3991, 4000, 
	4009, 4018, 4027, 4036, 4045, 4054, 4063, 4074, 
	4083, 4092, 4101, 4110, 4119, 4128, 4137, 4146, 
	4155, 4164, 4173, 4182, 4191, 4200, 4209, 4218, 
	4227, 4236, 4245, 4254, 4263, 4272, 4285, 4294, 
	4303, 4312, 4321, 4330, 4339, 4350, 4359, 4368, 
	4377, 4386, 4395, 4404, 4413, 4424, 4433, 4442, 
	4451, 4460, 4469, 4478, 4487, 4496, 4505, 4515, 
	4526, 4537, 4554, 4571, 4586, 4599, 4612, 4625, 
	4638, 4653, 4672
};

static const char _rasta_man_trans_keys[] = {
	32, 90, 122, 9, 13, 69, 101, 82, 
	114, 79, 111, 48, 57, 48, 57, 65, 
	122, 32, 9, 13, 48, 57, 32, 93, 
	9, 13, 32, 61, 9, 13, 32, 48, 
	59, 60, 61, 62, 65, 66, 67, 68, 
	70, 73, 76, 77, 78, 79, 80, 82, 
	83, 84, 87, 91, 95, 97, 98, 99, 
	100, 101, 102, 104, 105, 107, 108, 109, 
	110, 111, 112, 114, 115, 116, 119, 123, 
	124, 125, 9, 13, 49, 57, 69, 122, 
	32, 9, 13, 32, 61, 9, 13, 46, 
	88, 120, 48, 57, 48, 57, 46, 48, 
	57, 48, 57, 68, 76, 78, 95, 100, 
	108, 110, 48, 57, 65, 90, 97, 122, 
	95, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	76, 80, 95, 108, 112, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 86, 95, 118, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 71, 95, 103, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 66, 95, 98, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 65, 76, 79, 95, 97, 108, 111, 
	48, 57, 66, 90, 98, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 75, 
	95, 107, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 70, 79, 83, 95, 
	101, 102, 111, 115, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 66, 95, 98, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	72, 95, 104, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 69, 
	70, 79, 83, 95, 101, 102, 111, 115, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 76, 85, 95, 108, 117, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 77, 95, 109, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	80, 83, 95, 112, 115, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 66, 83, 95, 
	98, 115, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 66, 
	83, 95, 98, 115, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 65, 66, 67, 95, 97, 
	98, 99, 48, 57, 68, 90, 100, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 72, 95, 104, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 68, 
	95, 100, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 65, 66, 67, 95, 97, 98, 
	99, 48, 57, 68, 90, 100, 122, 65, 
	73, 82, 95, 97, 105, 114, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 48, 57, 
	65, 90, 97, 122, 75, 95, 107, 48, 
	57, 65, 90, 97, 122, 87, 95, 119, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 86, 95, 118, 48, 
	57, 65, 90, 97, 122, 66, 68, 83, 
	95, 98, 100, 115, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	65, 67, 95, 97, 99, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 72, 95, 104, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 65, 67, 95, 97, 99, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	49, 65, 67, 95, 97, 99, 48, 57, 
	66, 90, 98, 122, 65, 67, 95, 97, 
	99, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 65, 
	67, 95, 97, 99, 48, 57, 66, 90, 
	98, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 65, 67, 95, 97, 99, 48, 
	57, 66, 90, 98, 122, 66, 68, 83, 
	95, 98, 100, 115, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 65, 
	73, 95, 97, 105, 48, 57, 66, 90, 
	98, 122, 71, 88, 95, 103, 120, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 78, 80, 82, 95, 110, 
	112, 114, 48, 57, 65, 90, 97, 122, 
	70, 76, 77, 80, 95, 102, 108, 109, 
	112, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 71, 95, 103, 48, 57, 
	65, 90, 97, 122, 77, 80, 95, 109, 
	112, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 77, 95, 109, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 77, 80, 
	95, 109, 112, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 71, 95, 103, 48, 57, 
	65, 90, 97, 122, 76, 77, 80, 95, 
	108, 109, 112, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 77, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 80, 
	95, 112, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 76, 
	77, 80, 95, 108, 109, 112, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	77, 95, 109, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 71, 95, 103, 48, 57, 65, 
	90, 97, 122, 76, 77, 95, 108, 109, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 77, 95, 109, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 76, 77, 
	95, 108, 109, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 76, 77, 80, 95, 108, 109, 
	112, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 65, 69, 
	95, 97, 101, 48, 57, 66, 90, 98, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 90, 95, 
	122, 48, 57, 65, 89, 97, 121, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 78, 
	86, 95, 110, 118, 48, 57, 65, 90, 
	97, 122, 68, 95, 100, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	71, 95, 103, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 87, 95, 119, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	77, 95, 109, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 87, 95, 119, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	85, 95, 117, 48, 57, 65, 90, 97, 
	122, 66, 95, 98, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	65, 79, 82, 85, 95, 97, 111, 114, 
	117, 48, 57, 66, 90, 98, 122, 77, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 49, 65, 
	66, 67, 95, 97, 98, 99, 48, 57, 
	68, 90, 100, 122, 65, 67, 95, 97, 
	99, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 65, 
	67, 95, 97, 99, 48, 57, 66, 90, 
	98, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	65, 66, 67, 95, 97, 98, 99, 48, 
	57, 68, 90, 100, 122, 66, 95, 98, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 69, 82, 95, 101, 114, 
	48, 57, 65, 90, 97, 122, 88, 95, 
	120, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	85, 95, 117, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 73, 82, 95, 
	105, 114, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 32, 95, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 93, 95, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 61, 
	95, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 61, 68, 76, 78, 95, 100, 
	108, 110, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 61, 65, 76, 79, 95, 
	97, 108, 111, 9, 13, 48, 57, 66, 
	90, 98, 122, 32, 61, 76, 85, 95, 
	108, 117, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 61, 69, 95, 101, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	61, 73, 95, 105, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 61, 79, 95, 
	111, 9, 13, 48, 57, 65, 90, 97, 
	122, 32, 61, 79, 95, 111, 9, 13, 
	48, 57, 65, 90, 97, 122, 32, 61, 
	65, 69, 95, 97, 101, 9, 13, 48, 
	57, 66, 90, 98, 122, 32, 61, 65, 
	79, 82, 85, 95, 97, 111, 114, 117, 
	9, 13, 48, 57, 66, 90, 98, 122, 
	32, 61, 69, 82, 95, 101, 114, 9, 
	13, 48, 57, 65, 90, 97, 122, 0
};

static const char _rasta_man_single_lengths[] = {
	0, 3, 2, 2, 2, 0, 0, 0, 
	1, 2, 2, 44, 1, 2, 3, 0, 
	1, 0, 7, 1, 3, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 7, 3, 3, 3, 
	3, 3, 9, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	9, 3, 3, 3, 3, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 7, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 7, 7, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 7, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 3, 6, 
	5, 3, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 7, 3, 3, 3, 3, 
	3, 5, 5, 3, 3, 3, 3, 3, 
	3, 7, 9, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 3, 3, 3, 7, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 7, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 7, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 9, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 8, 5, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 7, 3, 3, 
	3, 3, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 2, 3, 
	3, 9, 9, 7, 5, 5, 5, 5, 
	7, 11, 7
};

static const char _rasta_man_range_lengths[] = {
	0, 1, 0, 0, 0, 1, 1, 1, 
	2, 1, 1, 3, 1, 1, 1, 1, 
	1, 1, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4
};

static const short _rasta_man_index_offsets[] = {
	0, 0, 5, 8, 11, 14, 16, 18, 
	20, 24, 28, 32, 80, 83, 87, 92, 
	94, 97, 99, 110, 115, 122, 131, 138, 
	145, 152, 159, 166, 173, 180, 187, 194, 
	201, 208, 215, 222, 229, 236, 243, 250, 
	257, 264, 271, 278, 285, 292, 299, 306, 
	313, 320, 327, 334, 341, 352, 359, 366, 
	373, 380, 387, 400, 407, 414, 421, 428, 
	435, 442, 449, 456, 463, 470, 477, 484, 
	491, 498, 505, 512, 519, 526, 533, 540, 
	547, 560, 567, 574, 581, 588, 597, 604, 
	611, 618, 625, 632, 639, 646, 653, 660, 
	667, 674, 683, 690, 697, 706, 713, 720, 
	727, 734, 741, 748, 755, 762, 769, 776, 
	783, 790, 797, 804, 811, 820, 827, 838, 
	845, 852, 859, 866, 873, 880, 887, 894, 
	901, 908, 915, 922, 929, 936, 943, 950, 
	957, 964, 975, 986, 993, 1000, 1007, 1014, 
	1021, 1028, 1035, 1042, 1049, 1056, 1063, 1070, 
	1077, 1084, 1091, 1098, 1105, 1112, 1119, 1126, 
	1133, 1140, 1147, 1154, 1161, 1168, 1175, 1182, 
	1189, 1196, 1203, 1210, 1217, 1228, 1235, 1242, 
	1249, 1256, 1263, 1270, 1277, 1284, 1291, 1298, 
	1305, 1312, 1319, 1326, 1335, 1342, 1349, 1356, 
	1363, 1370, 1377, 1384, 1391, 1400, 1407, 1414, 
	1424, 1433, 1440, 1447, 1454, 1461, 1468, 1475, 
	1482, 1489, 1498, 1505, 1512, 1519, 1526, 1533, 
	1540, 1547, 1554, 1563, 1574, 1581, 1588, 1595, 
	1602, 1609, 1618, 1627, 1634, 1641, 1648, 1655, 
	1662, 1669, 1680, 1693, 1700, 1707, 1714, 1721, 
	1728, 1735, 1742, 1749, 1756, 1763, 1770, 1777, 
	1784, 1793, 1800, 1807, 1814, 1821, 1828, 1835, 
	1842, 1849, 1856, 1863, 1870, 1877, 1884, 1891, 
	1898, 1905, 1912, 1919, 1926, 1933, 1940, 1947, 
	1954, 1963, 1970, 1977, 1984, 1995, 2002, 2009, 
	2016, 2023, 2030, 2037, 2044, 2051, 2058, 2065, 
	2072, 2079, 2086, 2093, 2100, 2107, 2114, 2121, 
	2128, 2135, 2142, 2149, 2156, 2163, 2170, 2177, 
	2184, 2191, 2198, 2205, 2212, 2219, 2226, 2233, 
	2240, 2247, 2254, 2261, 2272, 2279, 2286, 2293, 
	2300, 2307, 2314, 2321, 2330, 2337, 2344, 2351, 
	2358, 2365, 2372, 2379, 2386, 2393, 2400, 2407, 
	2414, 2421, 2428, 2435, 2442, 2449, 2456, 2463, 
	2470, 2477, 2484, 2491, 2498, 2507, 2514, 2525, 
	2532, 2539, 2546, 2553, 2560, 2567, 2574, 2581, 
	2588, 2595, 2602, 2609, 2616, 2623, 2630, 2637, 
	2644, 2651, 2658, 2665, 2672, 2679, 2686, 2695, 
	2702, 2709, 2716, 2723, 2730, 2737, 2744, 2751, 
	2758, 2765, 2772, 2779, 2786, 2793, 2802, 2809, 
	2816, 2823, 2830, 2837, 2844, 2851, 2858, 2865, 
	2872, 2879, 2886, 2893, 2900, 2907, 2914, 2921, 
	2928, 2935, 2942, 2949, 2956, 2963, 2970, 2977, 
	2984, 2991, 2998, 3005, 3012, 3025, 3032, 3039, 
	3046, 3053, 3060, 3067, 3074, 3081, 3088, 3095, 
	3102, 3109, 3116, 3123, 3130, 3142, 3151, 3158, 
	3165, 3172, 3179, 3186, 3193, 3200, 3207, 3216, 
	3223, 3230, 3237, 3244, 3251, 3258, 3265, 3272, 
	3279, 3286, 3293, 3300, 3307, 3314, 3321, 3328, 
	3335, 3342, 3349, 3356, 3363, 3370, 3381, 3388, 
	3395, 3402, 3409, 3416, 3423, 3432, 3439, 3446, 
	3453, 3460, 3467, 3474, 3481, 3490, 3497, 3504, 
	3511, 3518, 3525, 3532, 3539, 3546, 3553, 3560, 
	3568, 3576, 3590, 3604, 3616, 3626, 3636, 3646, 
	3656, 3668, 3684
};

static const short _rasta_man_indicies[] = {
	1, 2, 2, 1, 0, 3, 3, 0, 
	4, 4, 0, 5, 5, 0, 7, 6, 
	8, 6, 9, 0, 11, 11, 12, 10, 
	12, 13, 12, 10, 14, 1, 14, 0, 
	17, 18, 20, 21, 22, 23, 24, 25, 
	26, 27, 29, 30, 31, 32, 33, 34, 
	35, 36, 37, 38, 39, 40, 41, 42, 
	43, 44, 45, 41, 29, 41, 30, 41, 
	46, 32, 47, 34, 48, 49, 50, 51, 
	39, 52, 14, 53, 15, 19, 28, 16, 
	15, 15, 54, 17, 1, 17, 54, 56, 
	57, 57, 19, 55, 7, 58, 56, 19, 
	55, 8, 59, 61, 62, 63, 28, 61, 
	62, 63, 28, 28, 28, 60, 28, 28, 
	28, 28, 0, 64, 28, 64, 28, 28, 
	28, 60, 65, 66, 28, 65, 66, 28, 
	28, 28, 60, 67, 28, 67, 28, 28, 
	28, 60, 68, 28, 68, 28, 28, 28, 
	60, 69, 70, 69, 28, 28, 28, 60, 
	71, 28, 71, 28, 28, 28, 60, 72, 
	73, 72, 28, 28, 28, 60, 74, 28, 
	74, 28, 28, 28, 60, 75, 28, 75, 
	28, 28, 28, 60, 76, 28, 76, 28, 
	28, 28, 60, 77, 28, 77, 28, 28, 
	28, 60, 78, 28, 78, 28, 28, 28, 
	60, 79, 28, 79, 28, 28, 28, 60, 
	80, 28, 80, 28, 28, 28, 60, 81, 
	82, 81, 28, 28, 28, 60, 83, 28, 
	83, 28, 28, 28, 60, 84, 28, 84, 
	28, 28, 28, 60, 85, 28, 85, 28, 
	28, 28, 60, 86, 28, 86, 28, 28, 
	28, 60, 87, 28, 87, 28, 28, 28, 
	60, 81, 28, 81, 28, 28, 28, 60, 
	72, 28, 72, 28, 28, 28, 60, 69, 
	28, 69, 28, 28, 28, 60, 88, 28, 
	88, 28, 28, 28, 60, 89, 28, 89, 
	28, 28, 28, 60, 90, 28, 90, 28, 
	28, 28, 60, 91, 28, 91, 28, 28, 
	28, 60, 92, 28, 92, 28, 28, 28, 
	60, 93, 28, 93, 28, 28, 28, 60, 
	94, 28, 94, 28, 28, 28, 60, 95, 
	28, 95, 28, 28, 28, 60, 96, 28, 
	96, 28, 28, 28, 60, 97, 98, 99, 
	28, 97, 98, 99, 28, 28, 28, 60, 
	100, 28, 100, 28, 28, 28, 60, 101, 
	28, 101, 28, 28, 28, 60, 102, 28, 
	102, 28, 28, 28, 60, 103, 28, 103, 
	28, 28, 28, 60, 104, 28, 104, 28, 
	28, 28, 60, 105, 106, 107, 108, 109, 
	105, 106, 107, 108, 28, 28, 28, 60, 
	110, 28, 110, 28, 28, 28, 60, 111, 
	28, 111, 28, 28, 28, 60, 112, 28, 
	112, 28, 28, 28, 60, 113, 28, 113, 
	28, 28, 28, 60, 114, 28, 114, 28, 
	28, 28, 60, 115, 28, 115, 28, 28, 
	28, 60, 116, 28, 116, 28, 28, 28, 
	60, 117, 28, 117, 28, 28, 28, 60, 
	118, 28, 118, 28, 28, 28, 60, 119, 
	28, 119, 28, 28, 28, 60, 120, 28, 
	120, 28, 28, 28, 60, 122, 123, 122, 
	28, 28, 28, 121, 124, 28, 124, 28, 
	28, 28, 60, 125, 28, 125, 28, 28, 
	28, 60, 126, 28, 126, 28, 28, 28, 
	60, 127, 28, 127, 28, 28, 28, 60, 
	122, 28, 122, 28, 28, 28, 60, 128, 
	28, 128, 28, 28, 28, 60, 129, 28, 
	129, 28, 28, 28, 60, 130, 28, 130, 
	28, 28, 28, 60, 131, 28, 131, 28, 
	28, 28, 60, 105, 106, 107, 108, 28, 
	105, 106, 107, 108, 28, 28, 28, 60, 
	132, 28, 132, 28, 28, 28, 60, 133, 
	28, 133, 28, 28, 28, 60, 134, 28, 
	134, 28, 28, 28, 60, 135, 28, 135, 
	28, 28, 28, 60, 136, 137, 28, 136, 
	137, 28, 28, 28, 60, 138, 28, 138, 
	28, 28, 28, 60, 139, 28, 139, 28, 
	28, 28, 60, 140, 28, 140, 28, 28, 
	28, 60, 141, 28, 141, 28, 28, 28, 
	60, 142, 28, 142, 28, 28, 28, 60, 
	143, 144, 143, 28, 28, 28, 60, 145, 
	28, 145, 28, 28, 28, 60, 146, 28, 
	146, 28, 28, 28, 60, 147, 28, 147, 
	28, 28, 28, 60, 143, 28, 143, 28, 
	28, 28, 60, 148, 28, 148, 28, 28, 
	28, 60, 149, 150, 28, 149, 150, 28, 
	28, 28, 60, 151, 28, 151, 28, 28, 
	28, 60, 152, 28, 152, 28, 28, 28, 
	60, 153, 154, 155, 153, 154, 28, 28, 
	28, 60, 156, 28, 156, 28, 28, 28, 
	60, 157, 28, 157, 28, 28, 28, 60, 
	158, 28, 158, 28, 28, 28, 60, 159, 
	28, 159, 28, 28, 28, 60, 160, 28, 
	160, 28, 28, 28, 60, 161, 28, 161, 
	28, 28, 28, 60, 162, 28, 162, 28, 
	28, 28, 60, 163, 28, 163, 28, 28, 
	28, 60, 164, 28, 164, 28, 28, 28, 
	60, 165, 166, 165, 28, 28, 28, 60, 
	167, 28, 167, 28, 28, 28, 60, 168, 
	28, 168, 28, 28, 28, 60, 169, 28, 
	169, 28, 28, 28, 60, 170, 28, 170, 
	28, 28, 28, 60, 165, 28, 165, 28, 
	28, 28, 60, 153, 154, 28, 153, 154, 
	28, 28, 28, 60, 171, 28, 171, 28, 
	28, 28, 60, 172, 173, 174, 175, 172, 
	173, 174, 28, 28, 28, 60, 176, 28, 
	176, 28, 28, 28, 60, 177, 28, 177, 
	28, 28, 28, 60, 178, 28, 178, 28, 
	28, 28, 60, 179, 28, 179, 28, 28, 
	28, 60, 180, 28, 180, 28, 28, 28, 
	60, 181, 28, 181, 28, 28, 28, 60, 
	182, 28, 182, 28, 28, 28, 60, 183, 
	28, 183, 28, 28, 28, 60, 185, 186, 
	185, 28, 28, 28, 184, 187, 28, 187, 
	28, 28, 28, 60, 188, 28, 188, 28, 
	28, 28, 60, 189, 28, 189, 28, 28, 
	28, 60, 190, 28, 190, 28, 28, 28, 
	60, 185, 28, 185, 28, 28, 28, 60, 
	191, 28, 191, 28, 28, 28, 60, 192, 
	28, 192, 28, 28, 28, 60, 193, 28, 
	193, 28, 28, 28, 60, 194, 28, 194, 
	28, 28, 28, 60, 172, 173, 174, 28, 
	172, 173, 174, 28, 28, 28, 60, 195, 
	196, 197, 28, 195, 196, 197, 28, 28, 
	28, 60, 198, 28, 198, 28, 28, 28, 
	60, 199, 28, 199, 28, 28, 28, 60, 
	200, 28, 200, 28, 28, 28, 60, 201, 
	28, 201, 28, 28, 28, 60, 202, 28, 
	202, 28, 28, 28, 60, 203, 204, 203, 
	28, 28, 28, 60, 205, 28, 205, 28, 
	28, 28, 60, 206, 28, 206, 28, 28, 
	28, 60, 207, 28, 207, 28, 28, 28, 
	60, 203, 28, 203, 28, 28, 28, 60, 
	208, 28, 208, 28, 28, 28, 60, 209, 
	28, 209, 28, 28, 28, 60, 210, 28, 
	210, 28, 28, 28, 60, 212, 213, 212, 
	28, 28, 28, 211, 214, 28, 214, 28, 
	28, 28, 60, 215, 28, 215, 28, 28, 
	28, 60, 216, 28, 216, 28, 28, 28, 
	60, 217, 28, 217, 28, 28, 28, 60, 
	218, 28, 218, 28, 28, 28, 60, 219, 
	28, 219, 28, 28, 28, 60, 220, 221, 
	220, 28, 28, 28, 60, 222, 28, 222, 
	28, 28, 28, 60, 223, 28, 223, 28, 
	28, 28, 60, 224, 28, 224, 28, 28, 
	28, 60, 225, 28, 225, 28, 28, 28, 
	60, 226, 28, 226, 28, 28, 28, 60, 
	227, 28, 227, 28, 28, 28, 60, 228, 
	28, 228, 28, 28, 28, 60, 229, 28, 
	229, 28, 28, 28, 60, 220, 28, 220, 
	28, 28, 28, 60, 212, 28, 212, 28, 
	28, 28, 60, 230, 28, 230, 28, 28, 
	28, 60, 231, 28, 231, 28, 28, 28, 
	60, 232, 233, 234, 235, 232, 233, 234, 
	28, 28, 28, 60, 236, 28, 236, 28, 
	28, 28, 60, 237, 28, 237, 28, 28, 
	28, 60, 238, 28, 238, 28, 28, 28, 
	60, 239, 28, 239, 28, 28, 28, 60, 
	240, 241, 240, 28, 28, 28, 60, 242, 
	28, 242, 28, 28, 28, 60, 243, 28, 
	243, 28, 28, 28, 60, 244, 28, 244, 
	28, 28, 28, 60, 245, 28, 245, 28, 
	28, 28, 60, 246, 28, 246, 28, 28, 
	28, 60, 240, 28, 240, 28, 28, 28, 
	60, 247, 28, 247, 28, 28, 28, 60, 
	248, 28, 248, 28, 28, 28, 60, 249, 
	28, 249, 28, 28, 28, 60, 250, 251, 
	252, 250, 251, 28, 28, 28, 60, 253, 
	28, 253, 28, 28, 28, 60, 254, 28, 
	254, 28, 28, 28, 60, 255, 28, 255, 
	28, 28, 28, 60, 256, 28, 256, 28, 
	28, 28, 60, 257, 28, 257, 28, 28, 
	28, 60, 258, 28, 258, 28, 28, 28, 
	60, 259, 28, 259, 28, 28, 28, 60, 
	260, 28, 260, 28, 28, 28, 60, 250, 
	251, 28, 250, 251, 28, 28, 28, 60, 
	261, 28, 261, 28, 28, 28, 60, 262, 
	28, 262, 28, 28, 28, 60, 263, 264, 
	265, 266, 264, 265, 28, 28, 28, 60, 
	267, 268, 269, 267, 268, 28, 28, 28, 
	60, 270, 28, 270, 28, 28, 28, 60, 
	271, 28, 271, 28, 28, 28, 60, 272, 
	28, 272, 28, 28, 28, 60, 273, 28, 
	273, 28, 28, 28, 60, 274, 28, 274, 
	28, 28, 28, 60, 275, 28, 275, 28, 
	28, 28, 60, 276, 28, 276, 28, 28, 
	28, 60, 277, 28, 277, 28, 28, 28, 
	60, 267, 268, 28, 267, 268, 28, 28, 
	28, 60, 278, 28, 278, 28, 28, 28, 
	60, 279, 28, 279, 28, 28, 28, 60, 
	280, 28, 280, 28, 28, 28, 60, 281, 
	28, 281, 28, 28, 28, 60, 282, 28, 
	282, 28, 28, 28, 60, 283, 28, 283, 
	28, 28, 28, 60, 284, 28, 284, 28, 
	28, 28, 60, 285, 28, 285, 28, 28, 
	28, 60, 264, 265, 28, 264, 265, 28, 
	28, 28, 60, 232, 233, 234, 28, 232, 
	233, 234, 28, 28, 28, 60, 286, 28, 
	286, 28, 28, 28, 60, 287, 28, 287, 
	28, 28, 28, 60, 288, 28, 288, 28, 
	28, 28, 60, 289, 28, 289, 28, 28, 
	28, 60, 290, 28, 290, 28, 28, 28, 
	60, 291, 292, 28, 291, 292, 28, 28, 
	28, 60, 293, 294, 28, 293, 294, 28, 
	28, 28, 60, 295, 28, 295, 28, 28, 
	28, 60, 296, 28, 296, 28, 28, 28, 
	60, 297, 28, 297, 28, 28, 28, 60, 
	298, 28, 298, 28, 28, 28, 60, 299, 
	28, 299, 28, 28, 28, 60, 300, 28, 
	300, 28, 28, 28, 60, 301, 302, 303, 
	28, 301, 302, 303, 28, 28, 28, 60, 
	305, 306, 307, 308, 309, 305, 306, 307, 
	308, 28, 28, 28, 304, 310, 28, 310, 
	28, 28, 28, 60, 311, 28, 311, 28, 
	28, 28, 60, 312, 28, 312, 28, 28, 
	28, 60, 313, 28, 313, 28, 28, 28, 
	60, 314, 28, 314, 28, 28, 28, 60, 
	315, 28, 315, 28, 28, 28, 60, 316, 
	28, 316, 28, 28, 28, 60, 317, 28, 
	317, 28, 28, 28, 60, 318, 28, 318, 
	28, 28, 28, 60, 319, 28, 319, 28, 
	28, 28, 60, 320, 321, 320, 28, 28, 
	28, 60, 322, 28, 322, 28, 28, 28, 
	60, 323, 28, 323, 28, 28, 28, 60, 
	324, 325, 326, 324, 325, 28, 28, 28, 
	60, 327, 28, 327, 28, 28, 28, 60, 
	328, 28, 328, 28, 28, 28, 60, 329, 
	330, 329, 28, 28, 28, 60, 331, 28, 
	331, 28, 28, 28, 60, 332, 28, 332, 
	28, 28, 28, 60, 333, 28, 333, 28, 
	28, 28, 60, 334, 28, 334, 28, 28, 
	28, 60, 329, 28, 329, 28, 28, 28, 
	60, 335, 28, 335, 28, 28, 28, 60, 
	336, 28, 336, 28, 28, 28, 60, 337, 
	28, 337, 28, 28, 28, 60, 338, 28, 
	338, 28, 28, 28, 60, 339, 340, 339, 
	28, 28, 28, 60, 341, 28, 341, 28, 
	28, 28, 60, 342, 28, 342, 28, 28, 
	28, 60, 343, 344, 343, 28, 28, 28, 
	60, 345, 28, 345, 28, 28, 28, 60, 
	346, 28, 346, 28, 28, 28, 60, 347, 
	28, 347, 28, 28, 28, 60, 348, 28, 
	348, 28, 28, 28, 60, 349, 28, 349, 
	28, 28, 28, 60, 343, 28, 343, 28, 
	28, 28, 60, 339, 28, 339, 28, 28, 
	28, 60, 324, 325, 28, 324, 325, 28, 
	28, 28, 60, 320, 28, 320, 28, 28, 
	28, 60, 350, 28, 350, 28, 28, 28, 
	60, 351, 28, 351, 28, 28, 28, 60, 
	352, 353, 354, 355, 352, 353, 354, 28, 
	28, 28, 60, 356, 28, 356, 28, 28, 
	28, 60, 357, 28, 357, 28, 28, 28, 
	60, 358, 28, 358, 28, 28, 28, 60, 
	359, 28, 359, 28, 28, 28, 60, 360, 
	28, 360, 28, 28, 28, 60, 361, 362, 
	361, 28, 28, 28, 60, 363, 28, 363, 
	28, 28, 28, 60, 364, 28, 364, 28, 
	28, 28, 60, 365, 366, 365, 28, 28, 
	28, 60, 367, 28, 367, 28, 28, 28, 
	60, 368, 28, 368, 28, 28, 28, 60, 
	369, 28, 369, 28, 28, 28, 60, 370, 
	28, 370, 28, 28, 28, 60, 365, 28, 
	365, 28, 28, 28, 60, 361, 28, 361, 
	28, 28, 28, 60, 371, 28, 371, 28, 
	28, 28, 60, 372, 28, 372, 28, 28, 
	28, 60, 373, 374, 373, 28, 28, 28, 
	60, 375, 28, 375, 28, 28, 28, 60, 
	376, 28, 376, 28, 28, 28, 60, 377, 
	28, 377, 28, 28, 28, 60, 378, 28, 
	378, 28, 28, 28, 60, 373, 28, 373, 
	28, 28, 28, 60, 379, 28, 379, 28, 
	28, 28, 60, 380, 28, 380, 28, 28, 
	28, 60, 381, 28, 381, 28, 28, 28, 
	60, 382, 28, 382, 28, 28, 28, 60, 
	383, 384, 383, 28, 28, 28, 60, 385, 
	28, 385, 28, 28, 28, 60, 386, 28, 
	386, 28, 28, 28, 60, 387, 388, 387, 
	28, 28, 28, 60, 389, 28, 389, 28, 
	28, 28, 60, 390, 28, 390, 28, 28, 
	28, 60, 391, 28, 391, 28, 28, 28, 
	60, 392, 28, 392, 28, 28, 28, 60, 
	393, 28, 393, 28, 28, 28, 60, 387, 
	28, 387, 28, 28, 28, 60, 383, 28, 
	383, 28, 28, 28, 60, 352, 353, 354, 
	28, 352, 353, 354, 28, 28, 28, 60, 
	394, 28, 394, 28, 28, 28, 60, 395, 
	28, 395, 28, 28, 28, 60, 396, 28, 
	396, 28, 28, 28, 60, 397, 28, 397, 
	28, 28, 28, 60, 398, 399, 398, 28, 
	28, 28, 60, 400, 28, 400, 28, 28, 
	28, 60, 401, 28, 401, 28, 28, 28, 
	60, 402, 403, 404, 402, 403, 28, 28, 
	28, 60, 405, 28, 405, 28, 28, 28, 
	60, 406, 28, 406, 28, 28, 28, 60, 
	407, 28, 407, 28, 28, 28, 60, 408, 
	28, 408, 28, 28, 28, 60, 409, 28, 
	409, 28, 28, 28, 60, 410, 411, 410, 
	28, 28, 28, 60, 412, 28, 412, 28, 
	28, 28, 60, 413, 28, 413, 28, 28, 
	28, 60, 414, 415, 414, 28, 28, 28, 
	60, 416, 28, 416, 28, 28, 28, 60, 
	417, 28, 417, 28, 28, 28, 60, 418, 
	28, 418, 28, 28, 28, 60, 419, 28, 
	419, 28, 28, 28, 60, 414, 28, 414, 
	28, 28, 28, 60, 410, 28, 410, 28, 
	28, 28, 60, 420, 28, 420, 28, 28, 
	28, 60, 421, 28, 421, 28, 28, 28, 
	60, 422, 423, 422, 28, 28, 28, 60, 
	424, 28, 424, 28, 28, 28, 60, 425, 
	28, 425, 28, 28, 28, 60, 426, 28, 
	426, 28, 28, 28, 60, 427, 28, 427, 
	28, 28, 28, 60, 428, 28, 428, 28, 
	28, 28, 60, 422, 28, 422, 28, 28, 
	28, 60, 402, 403, 28, 402, 403, 28, 
	28, 28, 60, 398, 28, 398, 28, 28, 
	28, 60, 306, 307, 308, 28, 306, 307, 
	308, 28, 28, 28, 60, 429, 28, 429, 
	28, 28, 28, 60, 430, 28, 430, 28, 
	28, 28, 60, 431, 28, 431, 28, 28, 
	28, 60, 432, 28, 432, 28, 28, 28, 
	60, 433, 28, 433, 28, 28, 28, 60, 
	434, 28, 434, 28, 28, 28, 60, 435, 
	28, 435, 28, 28, 28, 60, 436, 28, 
	436, 28, 28, 28, 60, 437, 28, 437, 
	28, 28, 28, 60, 439, 440, 439, 28, 
	28, 28, 438, 441, 28, 441, 28, 28, 
	28, 60, 442, 28, 442, 28, 28, 28, 
	60, 443, 28, 443, 28, 28, 28, 60, 
	439, 28, 439, 28, 28, 28, 60, 444, 
	28, 444, 28, 28, 28, 60, 445, 28, 
	445, 28, 28, 28, 60, 446, 28, 446, 
	28, 28, 28, 60, 447, 28, 447, 28, 
	28, 28, 60, 448, 28, 448, 28, 28, 
	28, 60, 449, 28, 449, 28, 28, 28, 
	60, 450, 28, 450, 28, 28, 28, 60, 
	451, 28, 451, 28, 28, 28, 60, 452, 
	28, 452, 28, 28, 28, 60, 453, 454, 
	28, 453, 454, 28, 28, 28, 60, 455, 
	28, 455, 28, 28, 28, 60, 456, 28, 
	456, 28, 28, 28, 60, 457, 28, 457, 
	28, 28, 28, 60, 458, 28, 458, 28, 
	28, 28, 60, 459, 28, 459, 28, 28, 
	28, 60, 460, 28, 460, 28, 28, 28, 
	60, 461, 28, 461, 28, 28, 28, 60, 
	462, 28, 462, 28, 28, 28, 60, 463, 
	464, 463, 28, 28, 28, 60, 465, 28, 
	465, 28, 28, 28, 60, 466, 28, 466, 
	28, 28, 28, 60, 467, 28, 467, 28, 
	28, 28, 60, 468, 28, 468, 28, 28, 
	28, 60, 463, 28, 463, 28, 28, 28, 
	60, 469, 470, 28, 469, 470, 28, 28, 
	28, 60, 471, 28, 471, 28, 28, 28, 
	60, 472, 28, 472, 28, 28, 28, 60, 
	473, 28, 473, 28, 28, 28, 60, 474, 
	475, 474, 28, 28, 28, 60, 476, 28, 
	476, 28, 28, 28, 60, 477, 28, 477, 
	28, 28, 28, 60, 478, 28, 478, 28, 
	28, 28, 60, 479, 28, 479, 28, 28, 
	28, 60, 480, 28, 480, 28, 28, 28, 
	60, 481, 482, 481, 28, 28, 28, 60, 
	483, 28, 483, 28, 28, 28, 60, 484, 
	28, 484, 28, 28, 28, 60, 485, 28, 
	485, 28, 28, 28, 60, 486, 28, 486, 
	28, 28, 28, 60, 487, 488, 487, 28, 
	28, 28, 60, 489, 28, 489, 28, 28, 
	28, 60, 490, 28, 490, 28, 28, 28, 
	60, 491, 28, 491, 28, 28, 28, 60, 
	487, 28, 487, 28, 28, 28, 60, 481, 
	28, 481, 28, 28, 28, 60, 474, 28, 
	474, 28, 28, 28, 60, 492, 493, 492, 
	28, 28, 28, 60, 494, 28, 494, 28, 
	28, 28, 60, 495, 28, 495, 28, 28, 
	28, 60, 496, 28, 496, 28, 28, 28, 
	60, 497, 28, 497, 28, 28, 28, 60, 
	498, 28, 498, 28, 28, 28, 60, 499, 
	28, 499, 28, 28, 28, 60, 500, 28, 
	500, 28, 28, 28, 60, 492, 28, 492, 
	28, 28, 28, 60, 501, 502, 503, 504, 
	28, 501, 502, 503, 504, 28, 28, 28, 
	60, 505, 28, 505, 28, 28, 28, 60, 
	506, 28, 506, 28, 28, 28, 60, 507, 
	28, 507, 28, 28, 28, 60, 508, 28, 
	508, 28, 28, 28, 60, 509, 28, 509, 
	28, 28, 28, 60, 511, 512, 511, 28, 
	28, 28, 510, 513, 28, 513, 28, 28, 
	28, 60, 514, 28, 514, 28, 28, 28, 
	60, 515, 28, 515, 28, 28, 28, 60, 
	516, 28, 516, 28, 28, 28, 60, 511, 
	28, 511, 28, 28, 28, 60, 517, 28, 
	517, 28, 28, 28, 60, 518, 28, 518, 
	28, 28, 28, 60, 519, 28, 519, 28, 
	28, 28, 60, 520, 28, 520, 28, 28, 
	28, 60, 521, 522, 523, 524, 525, 522, 
	523, 524, 28, 28, 28, 60, 526, 527, 
	528, 526, 527, 28, 28, 28, 60, 529, 
	28, 529, 28, 28, 28, 60, 530, 28, 
	530, 28, 28, 28, 60, 531, 28, 531, 
	28, 28, 28, 60, 532, 28, 532, 28, 
	28, 28, 60, 533, 28, 533, 28, 28, 
	28, 60, 534, 28, 534, 28, 28, 28, 
	60, 535, 28, 535, 28, 28, 28, 60, 
	536, 28, 536, 28, 28, 28, 60, 526, 
	527, 28, 526, 527, 28, 28, 28, 60, 
	537, 28, 537, 28, 28, 28, 60, 538, 
	28, 538, 28, 28, 28, 60, 539, 28, 
	539, 28, 28, 28, 60, 540, 28, 540, 
	28, 28, 28, 60, 542, 543, 542, 28, 
	28, 28, 541, 544, 28, 544, 28, 28, 
	28, 60, 545, 28, 545, 28, 28, 28, 
	60, 542, 28, 542, 28, 28, 28, 60, 
	546, 28, 546, 28, 28, 28, 60, 547, 
	28, 547, 28, 28, 28, 60, 548, 28, 
	548, 28, 28, 28, 60, 549, 28, 549, 
	28, 28, 28, 60, 551, 552, 551, 28, 
	28, 28, 550, 553, 28, 553, 28, 28, 
	28, 60, 554, 28, 554, 28, 28, 28, 
	60, 555, 28, 555, 28, 28, 28, 60, 
	556, 28, 556, 28, 28, 28, 60, 551, 
	28, 551, 28, 28, 28, 60, 557, 28, 
	557, 28, 28, 28, 60, 558, 28, 558, 
	28, 28, 28, 60, 559, 28, 559, 28, 
	28, 28, 60, 560, 28, 560, 28, 28, 
	28, 60, 522, 523, 524, 28, 522, 523, 
	524, 28, 28, 28, 60, 561, 28, 561, 
	28, 28, 28, 60, 562, 28, 562, 28, 
	28, 28, 60, 563, 28, 563, 28, 28, 
	28, 60, 564, 28, 564, 28, 28, 28, 
	60, 565, 28, 565, 28, 28, 28, 60, 
	566, 28, 566, 28, 28, 28, 60, 567, 
	568, 28, 567, 568, 28, 28, 28, 60, 
	569, 28, 569, 28, 28, 28, 60, 570, 
	28, 570, 28, 28, 28, 60, 571, 28, 
	571, 28, 28, 28, 60, 572, 28, 572, 
	28, 28, 28, 60, 573, 28, 573, 28, 
	28, 28, 60, 574, 28, 574, 28, 28, 
	28, 60, 575, 28, 575, 28, 28, 28, 
	60, 576, 577, 28, 576, 577, 28, 28, 
	28, 60, 578, 28, 578, 28, 28, 28, 
	60, 579, 28, 579, 28, 28, 28, 60, 
	580, 28, 580, 28, 28, 28, 60, 581, 
	28, 581, 28, 28, 28, 60, 582, 28, 
	582, 28, 28, 28, 60, 583, 28, 583, 
	28, 28, 28, 60, 584, 28, 584, 28, 
	28, 28, 60, 585, 28, 585, 28, 28, 
	28, 60, 586, 28, 586, 28, 28, 28, 
	60, 11, 28, 11, 587, 28, 28, 60, 
	12, 13, 28, 12, 28, 28, 28, 60, 
	14, 1, 28, 14, 28, 28, 28, 60, 
	14, 1, 61, 62, 63, 28, 61, 62, 
	63, 14, 28, 28, 28, 60, 14, 1, 
	97, 98, 99, 28, 97, 98, 99, 14, 
	28, 28, 28, 60, 14, 1, 136, 137, 
	28, 136, 137, 14, 28, 28, 28, 60, 
	14, 1, 148, 28, 148, 14, 28, 28, 
	28, 60, 14, 1, 286, 28, 286, 14, 
	28, 28, 28, 60, 14, 1, 444, 28, 
	444, 14, 28, 28, 28, 60, 14, 1, 
	449, 28, 449, 14, 28, 28, 28, 60, 
	14, 1, 453, 454, 28, 453, 454, 14, 
	28, 28, 28, 60, 14, 1, 501, 502, 
	503, 504, 28, 501, 502, 503, 504, 14, 
	28, 28, 28, 60, 14, 1, 567, 568, 
	28, 567, 568, 14, 28, 28, 28, 60, 
	0
};

static const short _rasta_man_trans_targs[] = {
	11, 1, 2, 3, 4, 11, 11, 15, 
	7, 17, 11, 8, 9, 11, 10, 12, 
	0, 13, 14, 16, 11, 11, 11, 11, 
	18, 52, 85, 96, 19, 138, 170, 220, 
	225, 365, 368, 370, 374, 420, 476, 484, 
	494, 496, 497, 498, 499, 500, 501, 502, 
	503, 504, 505, 506, 11, 11, 11, 11, 
	5, 6, 11, 11, 11, 20, 21, 43, 
	19, 19, 22, 23, 24, 25, 42, 26, 
	27, 41, 28, 29, 30, 31, 32, 33, 
	34, 35, 40, 36, 37, 38, 39, 19, 
	44, 45, 46, 47, 48, 49, 50, 51, 
	19, 53, 55, 81, 54, 19, 56, 57, 
	58, 59, 64, 69, 76, 80, 60, 61, 
	62, 63, 19, 65, 66, 67, 68, 19, 
	70, 11, 71, 75, 72, 73, 74, 19, 
	77, 78, 79, 19, 82, 83, 84, 19, 
	86, 89, 87, 88, 19, 90, 91, 92, 
	95, 93, 94, 19, 97, 98, 117, 99, 
	100, 101, 104, 116, 102, 103, 19, 105, 
	106, 107, 108, 109, 110, 111, 115, 112, 
	113, 114, 19, 118, 119, 123, 133, 137, 
	120, 121, 122, 19, 124, 125, 126, 127, 
	11, 128, 132, 129, 130, 131, 19, 134, 
	135, 136, 19, 139, 142, 149, 140, 141, 
	19, 143, 144, 145, 148, 146, 147, 19, 
	150, 151, 152, 11, 153, 169, 154, 155, 
	156, 157, 158, 159, 160, 168, 161, 162, 
	163, 164, 165, 166, 167, 19, 171, 172, 
	173, 184, 197, 219, 174, 175, 176, 177, 
	178, 183, 179, 180, 181, 182, 19, 185, 
	186, 187, 188, 192, 196, 189, 190, 191, 
	19, 193, 194, 195, 19, 198, 199, 200, 
	210, 214, 218, 201, 205, 209, 202, 203, 
	204, 19, 206, 207, 208, 19, 211, 212, 
	213, 19, 215, 216, 217, 19, 221, 222, 
	223, 224, 19, 226, 233, 227, 19, 228, 
	229, 230, 231, 232, 19, 234, 351, 357, 
	11, 235, 240, 274, 316, 350, 236, 237, 
	238, 239, 19, 241, 242, 243, 244, 245, 
	246, 273, 247, 248, 249, 257, 272, 250, 
	251, 252, 256, 253, 254, 255, 19, 258, 
	259, 260, 261, 262, 271, 263, 264, 265, 
	270, 266, 267, 268, 269, 19, 275, 276, 
	277, 292, 300, 315, 278, 279, 280, 281, 
	282, 283, 291, 284, 285, 286, 290, 287, 
	288, 289, 19, 293, 294, 295, 299, 296, 
	297, 298, 19, 301, 302, 303, 304, 305, 
	314, 306, 307, 308, 313, 309, 310, 311, 
	312, 19, 317, 318, 319, 320, 321, 349, 
	322, 323, 324, 339, 348, 325, 326, 327, 
	328, 329, 330, 338, 331, 332, 333, 337, 
	334, 335, 336, 19, 340, 341, 342, 347, 
	343, 344, 345, 346, 19, 352, 353, 354, 
	355, 356, 19, 358, 359, 360, 11, 361, 
	364, 362, 363, 19, 366, 367, 19, 369, 
	19, 371, 372, 373, 19, 375, 389, 376, 
	377, 378, 379, 380, 381, 382, 383, 384, 
	388, 385, 386, 387, 19, 390, 411, 391, 
	392, 393, 394, 410, 395, 396, 397, 398, 
	399, 400, 409, 401, 402, 403, 404, 405, 
	408, 406, 407, 19, 412, 419, 413, 414, 
	415, 416, 417, 418, 19, 421, 432, 435, 
	470, 422, 423, 424, 425, 426, 11, 427, 
	431, 428, 429, 430, 19, 433, 434, 19, 
	436, 437, 447, 455, 465, 469, 438, 442, 
	446, 439, 440, 441, 19, 443, 444, 445, 
	19, 448, 449, 450, 451, 11, 452, 454, 
	453, 19, 456, 457, 458, 459, 11, 460, 
	464, 461, 462, 463, 19, 466, 467, 468, 
	19, 471, 472, 473, 474, 475, 19, 477, 
	482, 478, 479, 480, 481, 19, 483, 19, 
	485, 492, 486, 487, 488, 489, 490, 491, 
	19, 493, 19, 495
};

static const unsigned char _rasta_man_trans_actions[] = {
	51, 0, 0, 0, 0, 19, 47, 0, 
	0, 233, 49, 0, 0, 5, 0, 0, 
	0, 239, 230, 3, 15, 11, 17, 13, 
	0, 0, 0, 0, 236, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 236, 236, 236, 236, 236, 236, 236, 
	236, 236, 236, 236, 7, 9, 45, 37, 
	0, 0, 39, 41, 43, 0, 0, 0, 
	194, 74, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 131, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	116, 0, 0, 0, 0, 221, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 134, 0, 0, 0, 0, 176, 
	0, 29, 0, 0, 0, 0, 0, 143, 
	0, 0, 0, 62, 0, 0, 0, 125, 
	0, 0, 0, 0, 119, 0, 0, 0, 
	0, 0, 0, 215, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 227, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 56, 0, 0, 0, 0, 0, 
	0, 0, 0, 161, 0, 0, 0, 0, 
	27, 0, 0, 0, 0, 0, 140, 0, 
	0, 0, 167, 0, 0, 0, 0, 0, 
	68, 0, 0, 0, 0, 0, 0, 206, 
	0, 0, 0, 35, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 224, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 179, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	164, 0, 0, 0, 170, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 191, 0, 0, 0, 185, 0, 0, 
	0, 158, 0, 0, 0, 155, 0, 0, 
	0, 0, 92, 0, 0, 0, 203, 0, 
	0, 0, 0, 0, 83, 0, 0, 0, 
	33, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 80, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 107, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 110, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 113, 0, 0, 0, 0, 0, 
	0, 0, 95, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 98, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 101, 0, 0, 0, 0, 
	0, 0, 0, 0, 104, 0, 0, 0, 
	0, 0, 86, 0, 0, 0, 23, 0, 
	0, 0, 0, 128, 0, 0, 218, 0, 
	149, 0, 0, 0, 89, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 59, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 146, 0, 0, 0, 0, 
	0, 0, 0, 0, 200, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 21, 0, 
	0, 0, 0, 0, 65, 0, 0, 209, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 188, 0, 0, 0, 
	182, 0, 0, 0, 0, 31, 0, 0, 
	0, 173, 0, 0, 0, 0, 25, 0, 
	0, 0, 0, 0, 137, 0, 0, 0, 
	152, 0, 0, 0, 0, 0, 197, 0, 
	0, 0, 0, 0, 0, 77, 0, 71, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	212, 0, 122, 3
};

static const unsigned char _rasta_man_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 53, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const unsigned char _rasta_man_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0
};

static const short _rasta_man_eof_trans[] = {
	0, 1, 1, 1, 1, 7, 7, 1, 
	11, 11, 1, 0, 55, 55, 56, 59, 
	56, 60, 61, 1, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 122, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 185, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	212, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 305, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	439, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 511, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 542, 61, 61, 61, 61, 
	61, 61, 61, 551, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61, 61, 61, 61, 61, 61, 
	61, 61, 61
};

static const int rasta_man_start = 11;
static const int rasta_man_first_final = 11;
static const int rasta_man_error = 0;

static const int rasta_man_en_main = 11;


#line 15 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"


extern char* make_string(const char* ts, const char* te);
extern int make_hex(const char* ts, const char* te);

int parse_tokens(Tokens& tokens, char* str)
{
  char *p = str, *pe = str + strlen(str);
  int cs, act = 0;
  char *ts, *te, *tm = 0, *eof = 0;  

  
#line 1720 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
	{
	cs = rasta_man_start;
	ts = 0;
	te = 0;
	act = 0;
	}

#line 1726 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _rasta_man_actions + _rasta_man_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
#line 1 "NONE"
	{ts = p;}
	break;
#line 1745 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

	_keys = _rasta_man_trans_keys + _rasta_man_key_offsets[cs];
	_trans = _rasta_man_index_offsets[cs];

	_klen = _rasta_man_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _rasta_man_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _rasta_man_indicies[_trans];
_eof_trans:
	cs = _rasta_man_trans_targs[_trans];

	if ( _rasta_man_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _rasta_man_actions + _rasta_man_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 3:
#line 1 "NONE"
	{te = p+1;}
	break;
	case 4:
#line 174 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 8;}
	break;
	case 5:
#line 175 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 9;}
	break;
	case 6:
#line 176 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 10;}
	break;
	case 7:
#line 177 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 11;}
	break;
	case 8:
#line 180 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 13;}
	break;
	case 9:
#line 181 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 14;}
	break;
	case 10:
#line 183 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 15;}
	break;
	case 11:
#line 185 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 16;}
	break;
	case 12:
#line 186 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 17;}
	break;
	case 13:
#line 187 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 18;}
	break;
	case 14:
#line 188 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 19;}
	break;
	case 15:
#line 189 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 20;}
	break;
	case 16:
#line 190 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 21;}
	break;
	case 17:
#line 192 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 22;}
	break;
	case 18:
#line 193 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 23;}
	break;
	case 19:
#line 194 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 24;}
	break;
	case 20:
#line 195 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 25;}
	break;
	case 21:
#line 196 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 26;}
	break;
	case 22:
#line 197 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 27;}
	break;
	case 23:
#line 198 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 28;}
	break;
	case 24:
#line 199 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 29;}
	break;
	case 25:
#line 201 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 30;}
	break;
	case 26:
#line 202 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 31;}
	break;
	case 27:
#line 204 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 33;}
	break;
	case 28:
#line 205 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 34;}
	break;
	case 29:
#line 207 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 35;}
	break;
	case 30:
#line 208 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 36;}
	break;
	case 31:
#line 213 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 40;}
	break;
	case 32:
#line 214 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 41;}
	break;
	case 33:
#line 215 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 42;}
	break;
	case 34:
#line 216 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 43;}
	break;
	case 35:
#line 219 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 45;}
	break;
	case 36:
#line 220 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 46;}
	break;
	case 37:
#line 221 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 47;}
	break;
	case 38:
#line 223 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 49;}
	break;
	case 39:
#line 224 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 50;}
	break;
	case 40:
#line 225 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 51;}
	break;
	case 41:
#line 226 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 52;}
	break;
	case 42:
#line 227 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 53;}
	break;
	case 43:
#line 228 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 54;}
	break;
	case 44:
#line 229 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 55;}
	break;
	case 45:
#line 230 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 56;}
	break;
	case 46:
#line 231 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 57;}
	break;
	case 47:
#line 232 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 58;}
	break;
	case 48:
#line 233 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 59;}
	break;
	case 49:
#line 234 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 60;}
	break;
	case 50:
#line 236 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 61;}
	break;
	case 51:
#line 237 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 62;}
	break;
	case 52:
#line 238 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 63;}
	break;
	case 53:
#line 240 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 65;}
	break;
	case 54:
#line 242 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 66;}
	break;
	case 55:
#line 243 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 67;}
	break;
	case 56:
#line 244 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 68;}
	break;
	case 57:
#line 246 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 69;}
	break;
	case 58:
#line 247 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 70;}
	break;
	case 59:
#line 249 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 72;}
	break;
	case 60:
#line 251 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 73;}
	break;
	case 61:
#line 252 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 74;}
	break;
	case 62:
#line 254 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 75;}
	break;
	case 63:
#line 256 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 77;}
	break;
	case 64:
#line 257 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 78;}
	break;
	case 65:
#line 260 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 79;}
	break;
	case 66:
#line 165 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(INDEX, atoi(ts+1))); }}
	break;
	case 67:
#line 166 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(L_BRACE, 0)); }}
	break;
	case 68:
#line 167 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(R_BRACE, 0)); }}
	break;
	case 69:
#line 168 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(L_CLAMP, 0)); }}
	break;
	case 70:
#line 169 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(R_CLAMP, 0)); }}
	break;
	case 71:
#line 170 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(SEMI_COLON, 0)); }}
	break;
	case 72:
#line 171 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(ASSIGN, 0)); }}
	break;
	case 73:
#line 218 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(ASSIGN, 0)); tokens.push_back(Token(BLEND_V, D3D11_BLEND_ZERO)); }}
	break;
	case 74:
#line 178 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(SAMPLER_K,0));}}
	break;
	case 75:
#line 203 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_MIRROR)); }}
	break;
	case 76:
#line 209 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(SRC_BLEND_K,0));}}
	break;
	case 77:
#line 210 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(DEST_BLEND_K,0));}}
	break;
	case 78:
#line 211 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_OP_K,0));}}
	break;
	case 79:
#line 222 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_ALPHA)); }}
	break;
	case 80:
#line 239 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_MIN)); }}
	break;
	case 81:
#line 248 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(CULL_MODE_V, D3D11_CULL_FRONT)); }}
	break;
	case 82:
#line 254 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(VALUE, atoi(ts))); }}
	break;
	case 83:
#line 255 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(FLOAT_VALUE, (float)atof(ts))); }}
	break;
	case 84:
#line 256 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(VALUE, make_hex(ts, te))); }}
	break;
	case 85:
#line 257 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(ID, (int)make_string(ts, te))); }}
	break;
	case 86:
#line 260 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ }}
	break;
	case 87:
#line 254 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{{p = ((te))-1;}{ tokens.push_back(Token(VALUE, atoi(ts))); }}
	break;
	case 88:
#line 257 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{{p = ((te))-1;}{ tokens.push_back(Token(ID, (int)make_string(ts, te))); }}
	break;
	case 89:
#line 1 "NONE"
	{	switch( act ) {
	case 0:
	{{cs = 0; goto _again;}}
	break;
	case 8:
	{{p = ((te))-1;} tokens.push_back(Token(DEPTH_STENCIL_STATE_K,0));}
	break;
	case 9:
	{{p = ((te))-1;} tokens.push_back(Token(RASTERIZER_STATE_K,0));}
	break;
	case 10:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_STATE_K,0));}
	break;
	case 11:
	{{p = ((te))-1;} tokens.push_back(Token(SAMPLER_STATE_K,0));}
	break;
	case 13:
	{{p = ((te))-1;} tokens.push_back(Token(BOOL_V, 0)); }
	break;
	case 14:
	{{p = ((te))-1;} tokens.push_back(Token(BOOL_V, 1)); }
	break;
	case 15:
	{{p = ((te))-1;} tokens.push_back(Token(DEPTH_WRITE_MASK_V, D3D11_DEPTH_WRITE_MASK_ALL)); }
	break;
	case 16:
	{{p = ((te))-1;} tokens.push_back(Token(TEXTURE_K, 0)); }
	break;
	case 17:
	{{p = ((te))-1;} tokens.push_back(Token(MINFILTER_K, 0)); }
	break;
	case 18:
	{{p = ((te))-1;} tokens.push_back(Token(MAGFILTER_K, 0)); }
	break;
	case 19:
	{{p = ((te))-1;} tokens.push_back(Token(MIPFILTER_K, 0)); }
	break;
	case 20:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_TYPE_POINT)); }
	break;
	case 21:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_TYPE_LINEAR)); }
	break;
	case 22:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_MIP_POINT)); }
	break;
	case 23:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR)); }
	break;
	case 24:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT)); }
	break;
	case 25:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)); }
	break;
	case 26:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT)); }
	break;
	case 27:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)); }
	break;
	case 28:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT)); }
	break;
	case 29:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_ANISOTROPIC)); }
	break;
	case 30:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_CLAMP)); }
	break;
	case 31:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_WRAP)); }
	break;
	case 33:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_BORDER)); }
	break;
	case 34:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_MIRROR_ONCE)); }
	break;
	case 35:
	{{p = ((te))-1;} tokens.push_back(Token(ALPHA_TO_COVERAGE_ENABLE_K,0));}
	break;
	case 36:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_ENABLE_K,0));}
	break;
	case 40:
	{{p = ((te))-1;} tokens.push_back(Token(SRC_BLEND_ALPHA_K,0));}
	break;
	case 41:
	{{p = ((te))-1;} tokens.push_back(Token(DEST_BLEND_ALPHA_K,0));}
	break;
	case 42:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_ALPHA_K,0));}
	break;
	case 43:
	{{p = ((te))-1;} tokens.push_back(Token(RENDER_TARGET_WRITE_MASK_K,0));}
	break;
	case 45:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_ONE)); }
	break;
	case 46:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_COLOR)); }
	break;
	case 47:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC_COLOR)); }
	break;
	case 49:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC_ALPHA)); }
	break;
	case 50:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_DEST_ALPHA)); }
	break;
	case 51:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_DEST_ALPHA)); }
	break;
	case 52:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_DEST_COLOR)); }
	break;
	case 53:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_DEST_COLOR)); }
	break;
	case 54:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_ALPHA_SAT)); }
	break;
	case 55:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_BLEND_FACTOR)); }
	break;
	case 56:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_BLEND_FACTOR)); }
	break;
	case 57:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC1_COLOR)); }
	break;
	case 58:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC1_COLOR)); }
	break;
	case 59:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC1_ALPHA)); }
	break;
	case 60:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC1_ALPHA)); }
	break;
	case 61:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_ADD)); }
	break;
	case 62:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_SUBTRACT)); }
	break;
	case 63:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_REV_SUBTRACT)); }
	break;
	case 65:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_MAX)); }
	break;
	case 66:
	{{p = ((te))-1;} tokens.push_back(Token(FILL_MODE_K, 0)); }
	break;
	case 67:
	{{p = ((te))-1;} tokens.push_back(Token(FILL_MODE_V, D3D11_FILL_SOLID)); }
	break;
	case 68:
	{{p = ((te))-1;} tokens.push_back(Token(FILL_MODE_V, D3D11_FILL_WIREFRAME)); }
	break;
	case 69:
	{{p = ((te))-1;} tokens.push_back(Token(CULL_MODE_K, 0)); }
	break;
	case 70:
	{{p = ((te))-1;} tokens.push_back(Token(CULL_MODE_V, D3D11_CULL_NONE)); }
	break;
	case 72:
	{{p = ((te))-1;} tokens.push_back(Token(CULL_MODE_V, D3D11_CULL_BACK)); }
	break;
	case 73:
	{{p = ((te))-1;} tokens.push_back(Token(FRONT_COUNTER_CLOCKWISE_K, 0)); }
	break;
	case 74:
	{{p = ((te))-1;} tokens.push_back(Token(DEPTH_BIAS_K, 0)); }
	break;
	case 75:
	{{p = ((te))-1;} tokens.push_back(Token(VALUE, atoi(ts))); }
	break;
	case 77:
	{{p = ((te))-1;} tokens.push_back(Token(VALUE, make_hex(ts, te))); }
	break;
	case 78:
	{{p = ((te))-1;} tokens.push_back(Token(ID, (int)make_string(ts, te))); }
	break;
	case 79:
	{{p = ((te))-1;} }
	break;
	}
	}
	break;
#line 2262 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

_again:
	_acts = _rasta_man_actions + _rasta_man_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
#line 1 "NONE"
	{ts = 0;}
	break;
	case 1:
#line 1 "NONE"
	{act = 0;}
	break;
#line 2276 "C:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _rasta_man_eof_trans[cs] > 0 ) {
		_trans = _rasta_man_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	_out: {}
	}

#line 265 "C:\\projects\\shindig\\shindig\\parser\\parser.rl"

 
  return 1;
}

