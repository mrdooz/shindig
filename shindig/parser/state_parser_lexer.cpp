
#line 1 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <windows.h>
#include <memory.h>
#include <d3d11.h>
#include "state_parser_symbols.hpp"

// HLSL RasterizerState parser


#line 2 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
static const char _rasta_man_actions[] = {
	0, 1, 2, 1, 3, 1, 52, 1, 
	53, 1, 54, 1, 55, 1, 56, 1, 
	57, 1, 58, 1, 59, 1, 60, 1, 
	61, 1, 62, 1, 63, 1, 64, 1, 
	65, 1, 66, 1, 67, 1, 68, 1, 
	69, 1, 70, 2, 0, 1, 2, 3, 
	4, 2, 3, 5, 2, 3, 6, 2, 
	3, 7, 2, 3, 8, 2, 3, 9, 
	2, 3, 10, 2, 3, 11, 2, 3, 
	12, 2, 3, 13, 2, 3, 14, 2, 
	3, 15, 2, 3, 16, 2, 3, 17, 
	2, 3, 18, 2, 3, 19, 2, 3, 
	20, 2, 3, 21, 2, 3, 22, 2, 
	3, 23, 2, 3, 24, 2, 3, 25, 
	2, 3, 26, 2, 3, 27, 2, 3, 
	28, 2, 3, 29, 2, 3, 30, 2, 
	3, 31, 2, 3, 32, 2, 3, 33, 
	2, 3, 34, 2, 3, 35, 2, 3, 
	36, 2, 3, 37, 2, 3, 38, 2, 
	3, 39, 2, 3, 40, 2, 3, 41, 
	2, 3, 42, 2, 3, 43, 2, 3, 
	44, 2, 3, 45, 2, 3, 46, 2, 
	3, 47, 2, 3, 48, 2, 3, 49, 
	2, 3, 50, 2, 3, 51
};

static const short _rasta_man_key_offsets[] = {
	0, 0, 5, 7, 9, 11, 13, 15, 
	20, 24, 28, 73, 76, 80, 84, 86, 
	88, 101, 108, 117, 128, 137, 146, 155, 
	164, 173, 182, 191, 200, 209, 218, 227, 
	236, 245, 254, 263, 272, 281, 290, 299, 
	308, 317, 326, 335, 344, 353, 362, 371, 
	380, 389, 398, 409, 418, 427, 436, 451, 
	460, 469, 478, 487, 496, 505, 514, 523, 
	532, 541, 550, 559, 568, 577, 586, 595, 
	604, 613, 622, 631, 640, 655, 664, 673, 
	682, 691, 700, 709, 718, 727, 736, 747, 
	756, 765, 774, 783, 792, 801, 810, 819, 
	828, 837, 846, 855, 864, 873, 882, 891, 
	900, 913, 922, 931, 940, 949, 958, 967, 
	976, 985, 994, 1003, 1012, 1021, 1030, 1039, 
	1048, 1057, 1066, 1075, 1088, 1097, 1106, 1115, 
	1124, 1133, 1142, 1155, 1164, 1173, 1182, 1191, 
	1200, 1209, 1218, 1227, 1236, 1245, 1254, 1263, 
	1272, 1281, 1292, 1301, 1310, 1319, 1328, 1337, 
	1346, 1355, 1364, 1375, 1384, 1393, 1405, 1416, 
	1425, 1434, 1443, 1452, 1461, 1470, 1479, 1488, 
	1499, 1508, 1517, 1526, 1535, 1544, 1553, 1562, 
	1571, 1582, 1595, 1606, 1615, 1626, 1639, 1648, 
	1657, 1666, 1675, 1684, 1693, 1702, 1711, 1722, 
	1731, 1740, 1749, 1758, 1767, 1776, 1785, 1794, 
	1803, 1812, 1821, 1830, 1839, 1848, 1857, 1866, 
	1875, 1884, 1893, 1902, 1911, 1920, 1929, 1940, 
	1949, 1958, 1967, 1980, 1989, 1998, 2007, 2016, 
	2025, 2034, 2043, 2052, 2061, 2070, 2079, 2088, 
	2097, 2106, 2115, 2124, 2133, 2142, 2151, 2160, 
	2169, 2178, 2187, 2196, 2205, 2214, 2223, 2232, 
	2241, 2250, 2259, 2268, 2277, 2286, 2295, 2304, 
	2313, 2322, 2335, 2344, 2353, 2362, 2371, 2380, 
	2389, 2398, 2409, 2418, 2427, 2436, 2445, 2454, 
	2463, 2472, 2481, 2490, 2499, 2508, 2517, 2526, 
	2535, 2544, 2553, 2562, 2571, 2580, 2589, 2598, 
	2607, 2616, 2625, 2636, 2645, 2658, 2667, 2676, 
	2685, 2694, 2703, 2712, 2721, 2730, 2739, 2748, 
	2759, 2768, 2777, 2786, 2795, 2804, 2813, 2822, 
	2831, 2840, 2849, 2858, 2867, 2876, 2885, 2896, 
	2905, 2914, 2923, 2932, 2941, 2950, 2959, 2968, 
	2977, 2986, 2995, 3004, 3013, 3022, 3031, 3040, 
	3049, 3058, 3067, 3076, 3085, 3094, 3103, 3112, 
	3121, 3130, 3139, 3148, 3157, 3166, 3179, 3188, 
	3197, 3206, 3215, 3224, 3233, 3242, 3251, 3260, 
	3269, 3278, 3287, 3301, 3312, 3321, 3330, 3339, 
	3348, 3357, 3366, 3375, 3384, 3395, 3404, 3413, 
	3422, 3431, 3440, 3449, 3458, 3467, 3476, 3485, 
	3494, 3503, 3512, 3521, 3530, 3539, 3548, 3557, 
	3566, 3575, 3584, 3593, 3606, 3615, 3624, 3633, 
	3642, 3651, 3660, 3669, 3678, 3687, 3696, 3705, 
	3714, 3724, 3735, 3746, 3763, 3778, 3791, 3804, 
	3819, 3836
};

static const char _rasta_man_trans_keys[] = {
	32, 90, 122, 9, 13, 69, 101, 82, 
	114, 79, 111, 48, 57, 65, 122, 32, 
	9, 13, 48, 57, 32, 93, 9, 13, 
	32, 61, 9, 13, 32, 48, 59, 61, 
	65, 66, 67, 68, 70, 73, 77, 79, 
	82, 83, 84, 87, 91, 95, 97, 98, 
	99, 100, 101, 102, 104, 105, 109, 111, 
	114, 115, 116, 119, 123, 124, 125, 9, 
	13, 49, 57, 69, 106, 107, 112, 113, 
	122, 32, 9, 13, 32, 61, 9, 13, 
	88, 120, 48, 57, 48, 57, 48, 57, 
	68, 76, 78, 95, 100, 108, 110, 48, 
	57, 65, 90, 97, 122, 95, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 76, 80, 95, 
	108, 112, 48, 57, 65, 90, 97, 122, 
	72, 95, 104, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 67, 95, 99, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 86, 95, 
	118, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 71, 95, 103, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 67, 95, 99, 
	48, 57, 65, 90, 97, 122, 76, 79, 
	95, 108, 111, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 69, 70, 79, 83, 
	95, 101, 102, 111, 115, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 66, 95, 98, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 72, 95, 104, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	69, 70, 79, 83, 95, 101, 102, 111, 
	115, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	80, 83, 95, 112, 115, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 65, 66, 67, 95, 
	97, 98, 99, 48, 57, 68, 90, 100, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 72, 95, 104, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 65, 66, 67, 95, 97, 
	98, 99, 48, 57, 68, 90, 100, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 86, 95, 118, 
	48, 57, 65, 90, 97, 122, 66, 68, 
	83, 95, 98, 100, 115, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 67, 95, 99, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 65, 67, 95, 97, 99, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 72, 95, 
	104, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 65, 67, 95, 97, 
	99, 48, 57, 66, 90, 98, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 49, 65, 67, 95, 97, 99, 48, 
	57, 66, 90, 98, 122, 65, 67, 95, 
	97, 99, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 72, 95, 104, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	65, 67, 95, 97, 99, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 72, 95, 104, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 65, 67, 95, 97, 99, 
	48, 57, 66, 90, 98, 122, 66, 68, 
	83, 95, 98, 100, 115, 48, 57, 65, 
	90, 97, 122, 65, 73, 95, 97, 105, 
	48, 57, 66, 90, 98, 122, 88, 95, 
	120, 48, 57, 65, 90, 97, 122, 78, 
	82, 95, 110, 114, 48, 57, 65, 90, 
	97, 122, 76, 77, 80, 95, 108, 109, 
	112, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 77, 
	80, 95, 109, 112, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 78, 95, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	77, 95, 109, 48, 57, 65, 90, 97, 
	122, 77, 80, 95, 109, 112, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 76, 
	77, 80, 95, 108, 109, 112, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 80, 95, 112, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 77, 95, 109, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 84, 95, 
	116, 48, 57, 65, 90, 97, 122, 77, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 77, 95, 109, 48, 57, 65, 90, 
	97, 122, 76, 77, 80, 95, 108, 109, 
	112, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 77, 95, 109, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 71, 95, 103, 
	48, 57, 65, 90, 97, 122, 76, 77, 
	95, 108, 109, 48, 57, 65, 90, 97, 
	122, 73, 95, 105, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 79, 95, 111, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 77, 
	95, 109, 48, 57, 65, 90, 97, 122, 
	73, 95, 105, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 76, 77, 95, 108, 109, 48, 57, 
	65, 90, 97, 122, 77, 95, 109, 48, 
	57, 65, 90, 97, 122, 76, 77, 80, 
	95, 108, 109, 112, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 79, 95, 111, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 65, 69, 95, 97, 
	101, 48, 57, 66, 90, 98, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 90, 95, 122, 48, 
	57, 65, 89, 97, 121, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 83, 95, 115, 48, 
	57, 65, 90, 97, 122, 78, 86, 95, 
	110, 118, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 87, 95, 119, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 75, 95, 107, 48, 57, 65, 90, 
	97, 122, 77, 95, 109, 48, 57, 65, 
	90, 97, 122, 87, 95, 119, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 85, 95, 
	117, 48, 57, 65, 90, 97, 122, 66, 
	95, 98, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 67, 95, 99, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 65, 82, 
	85, 95, 97, 114, 117, 48, 57, 66, 
	90, 98, 122, 77, 95, 109, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	83, 95, 115, 48, 57, 65, 90, 97, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 83, 95, 115, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 49, 
	65, 66, 67, 95, 97, 98, 99, 48, 
	57, 68, 90, 100, 122, 65, 67, 95, 
	97, 99, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 72, 95, 104, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 79, 95, 
	111, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	65, 67, 95, 97, 99, 48, 57, 66, 
	90, 98, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 80, 95, 112, 48, 
	57, 65, 90, 97, 122, 72, 95, 104, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 83, 
	95, 115, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 84, 95, 116, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 78, 95, 110, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 72, 95, 104, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 65, 66, 67, 95, 97, 98, 99, 
	48, 57, 68, 90, 100, 122, 66, 95, 
	98, 48, 57, 65, 90, 97, 122, 84, 
	95, 116, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 85, 95, 117, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 80, 95, 112, 48, 57, 65, 90, 
	97, 122, 32, 95, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 93, 95, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	61, 95, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 61, 68, 76, 78, 95, 
	100, 108, 110, 9, 13, 48, 57, 65, 
	90, 97, 122, 32, 61, 76, 79, 95, 
	108, 111, 9, 13, 48, 57, 65, 90, 
	97, 122, 32, 61, 76, 95, 108, 9, 
	13, 48, 57, 65, 90, 97, 122, 32, 
	61, 69, 95, 101, 9, 13, 48, 57, 
	65, 90, 97, 122, 32, 61, 65, 69, 
	95, 97, 101, 9, 13, 48, 57, 66, 
	90, 98, 122, 32, 61, 65, 82, 85, 
	95, 97, 114, 117, 9, 13, 48, 57, 
	66, 90, 98, 122, 32, 61, 82, 95, 
	114, 9, 13, 48, 57, 65, 90, 97, 
	122, 0
};

static const char _rasta_man_single_lengths[] = {
	0, 3, 2, 2, 2, 0, 0, 1, 
	2, 2, 35, 1, 2, 2, 0, 0, 
	7, 1, 3, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 3, 3, 3, 9, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 9, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	7, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 7, 3, 3, 3, 3, 
	3, 3, 7, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 3, 3, 6, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 7, 5, 3, 5, 7, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 7, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 7, 3, 3, 3, 3, 3, 3, 
	3, 5, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 5, 3, 7, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 5, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 7, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 8, 5, 3, 3, 3, 3, 
	3, 3, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 7, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	2, 3, 3, 9, 7, 5, 5, 7, 
	9, 5
};

static const char _rasta_man_range_lengths[] = {
	0, 1, 0, 0, 0, 1, 1, 2, 
	1, 1, 5, 1, 1, 1, 1, 1, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4
};

static const short _rasta_man_index_offsets[] = {
	0, 0, 5, 8, 11, 14, 16, 18, 
	22, 26, 30, 71, 74, 78, 82, 84, 
	86, 97, 102, 109, 118, 125, 132, 139, 
	146, 153, 160, 167, 174, 181, 188, 195, 
	202, 209, 216, 223, 230, 237, 244, 251, 
	258, 265, 272, 279, 286, 293, 300, 307, 
	314, 321, 328, 337, 344, 351, 358, 371, 
	378, 385, 392, 399, 406, 413, 420, 427, 
	434, 441, 448, 455, 462, 469, 476, 483, 
	490, 497, 504, 511, 518, 531, 538, 545, 
	552, 559, 566, 573, 580, 587, 594, 603, 
	610, 617, 624, 631, 638, 645, 652, 659, 
	666, 673, 680, 687, 694, 701, 708, 715, 
	722, 733, 740, 747, 754, 761, 768, 775, 
	782, 789, 796, 803, 810, 817, 824, 831, 
	838, 845, 852, 859, 870, 877, 884, 891, 
	898, 905, 912, 923, 930, 937, 944, 951, 
	958, 965, 972, 979, 986, 993, 1000, 1007, 
	1014, 1021, 1030, 1037, 1044, 1051, 1058, 1065, 
	1072, 1079, 1086, 1095, 1102, 1109, 1119, 1128, 
	1135, 1142, 1149, 1156, 1163, 1170, 1177, 1184, 
	1193, 1200, 1207, 1214, 1221, 1228, 1235, 1242, 
	1249, 1258, 1269, 1278, 1285, 1294, 1305, 1312, 
	1319, 1326, 1333, 1340, 1347, 1354, 1361, 1370, 
	1377, 1384, 1391, 1398, 1405, 1412, 1419, 1426, 
	1433, 1440, 1447, 1454, 1461, 1468, 1475, 1482, 
	1489, 1496, 1503, 1510, 1517, 1524, 1531, 1540, 
	1547, 1554, 1561, 1572, 1579, 1586, 1593, 1600, 
	1607, 1614, 1621, 1628, 1635, 1642, 1649, 1656, 
	1663, 1670, 1677, 1684, 1691, 1698, 1705, 1712, 
	1719, 1726, 1733, 1740, 1747, 1754, 1761, 1768, 
	1775, 1782, 1789, 1796, 1803, 1810, 1817, 1824, 
	1831, 1838, 1849, 1856, 1863, 1870, 1877, 1884, 
	1891, 1898, 1907, 1914, 1921, 1928, 1935, 1942, 
	1949, 1956, 1963, 1970, 1977, 1984, 1991, 1998, 
	2005, 2012, 2019, 2026, 2033, 2040, 2047, 2054, 
	2061, 2068, 2075, 2084, 2091, 2102, 2109, 2116, 
	2123, 2130, 2137, 2144, 2151, 2158, 2165, 2172, 
	2181, 2188, 2195, 2202, 2209, 2216, 2223, 2230, 
	2237, 2244, 2251, 2258, 2265, 2272, 2279, 2288, 
	2295, 2302, 2309, 2316, 2323, 2330, 2337, 2344, 
	2351, 2358, 2365, 2372, 2379, 2386, 2393, 2400, 
	2407, 2414, 2421, 2428, 2435, 2442, 2449, 2456, 
	2463, 2470, 2477, 2484, 2491, 2498, 2509, 2516, 
	2523, 2530, 2537, 2544, 2551, 2558, 2565, 2572, 
	2579, 2586, 2593, 2605, 2614, 2621, 2628, 2635, 
	2642, 2649, 2656, 2663, 2670, 2679, 2686, 2693, 
	2700, 2707, 2714, 2721, 2728, 2735, 2742, 2749, 
	2756, 2763, 2770, 2777, 2784, 2791, 2798, 2805, 
	2812, 2819, 2826, 2833, 2844, 2851, 2858, 2865, 
	2872, 2879, 2886, 2893, 2900, 2907, 2914, 2921, 
	2928, 2935, 2943, 2951, 2965, 2977, 2987, 2997, 
	3009, 3023
};

static const short _rasta_man_indicies[] = {
	1, 2, 2, 1, 0, 3, 3, 0, 
	4, 4, 0, 5, 5, 0, 7, 6, 
	8, 0, 10, 10, 11, 9, 11, 12, 
	11, 9, 13, 1, 13, 0, 16, 17, 
	19, 20, 21, 22, 23, 24, 26, 27, 
	28, 29, 30, 31, 32, 33, 34, 35, 
	36, 37, 38, 39, 35, 26, 35, 27, 
	28, 29, 40, 41, 42, 33, 43, 13, 
	44, 14, 18, 25, 35, 25, 15, 14, 
	14, 45, 16, 1, 16, 45, 47, 47, 
	18, 46, 18, 46, 7, 48, 50, 51, 
	52, 25, 50, 51, 52, 25, 25, 25, 
	49, 25, 25, 25, 25, 0, 53, 25, 
	53, 25, 25, 25, 49, 54, 55, 25, 
	54, 55, 25, 25, 25, 49, 56, 25, 
	56, 25, 25, 25, 49, 57, 25, 57, 
	25, 25, 25, 49, 58, 59, 58, 25, 
	25, 25, 49, 60, 25, 60, 25, 25, 
	25, 49, 61, 62, 61, 25, 25, 25, 
	49, 63, 25, 63, 25, 25, 25, 49, 
	64, 25, 64, 25, 25, 25, 49, 65, 
	25, 65, 25, 25, 25, 49, 66, 25, 
	66, 25, 25, 25, 49, 67, 25, 67, 
	25, 25, 25, 49, 68, 25, 68, 25, 
	25, 25, 49, 69, 25, 69, 25, 25, 
	25, 49, 70, 71, 70, 25, 25, 25, 
	49, 72, 25, 72, 25, 25, 25, 49, 
	73, 25, 73, 25, 25, 25, 49, 74, 
	25, 74, 25, 25, 25, 49, 75, 25, 
	75, 25, 25, 25, 49, 76, 25, 76, 
	25, 25, 25, 49, 70, 25, 70, 25, 
	25, 25, 49, 61, 25, 61, 25, 25, 
	25, 49, 58, 25, 58, 25, 25, 25, 
	49, 77, 25, 77, 25, 25, 25, 49, 
	78, 25, 78, 25, 25, 25, 49, 79, 
	25, 79, 25, 25, 25, 49, 80, 25, 
	80, 25, 25, 25, 49, 81, 25, 81, 
	25, 25, 25, 49, 82, 25, 82, 25, 
	25, 25, 49, 83, 25, 83, 25, 25, 
	25, 49, 84, 25, 84, 25, 25, 25, 
	49, 85, 25, 85, 25, 25, 25, 49, 
	86, 87, 25, 86, 87, 25, 25, 25, 
	49, 88, 25, 88, 25, 25, 25, 49, 
	89, 25, 89, 25, 25, 25, 49, 90, 
	25, 90, 25, 25, 25, 49, 91, 92, 
	93, 94, 95, 91, 92, 93, 94, 25, 
	25, 25, 49, 96, 25, 96, 25, 25, 
	25, 49, 97, 25, 97, 25, 25, 25, 
	49, 98, 25, 98, 25, 25, 25, 49, 
	99, 25, 99, 25, 25, 25, 49, 100, 
	25, 100, 25, 25, 25, 49, 101, 25, 
	101, 25, 25, 25, 49, 102, 25, 102, 
	25, 25, 25, 49, 103, 25, 103, 25, 
	25, 25, 49, 104, 25, 104, 25, 25, 
	25, 49, 105, 25, 105, 25, 25, 25, 
	49, 106, 25, 106, 25, 25, 25, 49, 
	108, 109, 108, 25, 25, 25, 107, 110, 
	25, 110, 25, 25, 25, 49, 111, 25, 
	111, 25, 25, 25, 49, 112, 25, 112, 
	25, 25, 25, 49, 113, 25, 113, 25, 
	25, 25, 49, 108, 25, 108, 25, 25, 
	25, 49, 114, 25, 114, 25, 25, 25, 
	49, 115, 25, 115, 25, 25, 25, 49, 
	116, 25, 116, 25, 25, 25, 49, 117, 
	25, 117, 25, 25, 25, 49, 91, 92, 
	93, 94, 25, 91, 92, 93, 94, 25, 
	25, 25, 49, 118, 25, 118, 25, 25, 
	25, 49, 119, 25, 119, 25, 25, 25, 
	49, 120, 25, 120, 25, 25, 25, 49, 
	121, 25, 121, 25, 25, 25, 49, 122, 
	25, 122, 25, 25, 25, 49, 123, 25, 
	123, 25, 25, 25, 49, 124, 25, 124, 
	25, 25, 25, 49, 125, 25, 125, 25, 
	25, 25, 49, 126, 25, 126, 25, 25, 
	25, 49, 127, 128, 25, 127, 128, 25, 
	25, 25, 49, 129, 25, 129, 25, 25, 
	25, 49, 130, 25, 130, 25, 25, 25, 
	49, 131, 132, 131, 25, 25, 25, 49, 
	133, 25, 133, 25, 25, 25, 49, 134, 
	25, 134, 25, 25, 25, 49, 135, 25, 
	135, 25, 25, 25, 49, 136, 25, 136, 
	25, 25, 25, 49, 137, 25, 137, 25, 
	25, 25, 49, 138, 25, 138, 25, 25, 
	25, 49, 139, 140, 139, 25, 25, 25, 
	49, 141, 25, 141, 25, 25, 25, 49, 
	142, 25, 142, 25, 25, 25, 49, 143, 
	25, 143, 25, 25, 25, 49, 144, 25, 
	144, 25, 25, 25, 49, 139, 25, 139, 
	25, 25, 25, 49, 131, 25, 131, 25, 
	25, 25, 49, 145, 25, 145, 25, 25, 
	25, 49, 146, 147, 148, 149, 146, 147, 
	148, 25, 25, 25, 49, 150, 25, 150, 
	25, 25, 25, 49, 151, 25, 151, 25, 
	25, 25, 49, 152, 25, 152, 25, 25, 
	25, 49, 153, 25, 153, 25, 25, 25, 
	49, 154, 25, 154, 25, 25, 25, 49, 
	155, 25, 155, 25, 25, 25, 49, 156, 
	25, 156, 25, 25, 25, 49, 157, 25, 
	157, 25, 25, 25, 49, 159, 160, 159, 
	25, 25, 25, 158, 161, 25, 161, 25, 
	25, 25, 49, 162, 25, 162, 25, 25, 
	25, 49, 163, 25, 163, 25, 25, 25, 
	49, 164, 25, 164, 25, 25, 25, 49, 
	159, 25, 159, 25, 25, 25, 49, 165, 
	25, 165, 25, 25, 25, 49, 166, 25, 
	166, 25, 25, 25, 49, 167, 25, 167, 
	25, 25, 25, 49, 168, 25, 168, 25, 
	25, 25, 49, 146, 147, 148, 25, 146, 
	147, 148, 25, 25, 25, 49, 169, 25, 
	169, 25, 25, 25, 49, 170, 25, 170, 
	25, 25, 25, 49, 171, 25, 171, 25, 
	25, 25, 49, 172, 25, 172, 25, 25, 
	25, 49, 173, 25, 173, 25, 25, 25, 
	49, 174, 25, 174, 25, 25, 25, 49, 
	175, 176, 177, 178, 175, 176, 177, 25, 
	25, 25, 49, 179, 25, 179, 25, 25, 
	25, 49, 180, 25, 180, 25, 25, 25, 
	49, 181, 25, 181, 25, 25, 25, 49, 
	182, 25, 182, 25, 25, 25, 49, 183, 
	184, 183, 25, 25, 25, 49, 185, 25, 
	185, 25, 25, 25, 49, 186, 25, 186, 
	25, 25, 25, 49, 187, 25, 187, 25, 
	25, 25, 49, 188, 25, 188, 25, 25, 
	25, 49, 189, 25, 189, 25, 25, 25, 
	49, 183, 25, 183, 25, 25, 25, 49, 
	190, 25, 190, 25, 25, 25, 49, 191, 
	25, 191, 25, 25, 25, 49, 192, 25, 
	192, 25, 25, 25, 49, 193, 194, 195, 
	193, 194, 25, 25, 25, 49, 196, 25, 
	196, 25, 25, 25, 49, 197, 25, 197, 
	25, 25, 25, 49, 198, 25, 198, 25, 
	25, 25, 49, 199, 25, 199, 25, 25, 
	25, 49, 200, 25, 200, 25, 25, 25, 
	49, 201, 25, 201, 25, 25, 25, 49, 
	202, 25, 202, 25, 25, 25, 49, 203, 
	25, 203, 25, 25, 25, 49, 193, 194, 
	25, 193, 194, 25, 25, 25, 49, 204, 
	25, 204, 25, 25, 25, 49, 205, 25, 
	205, 25, 25, 25, 49, 206, 207, 208, 
	209, 207, 208, 25, 25, 25, 49, 210, 
	211, 212, 210, 211, 25, 25, 25, 49, 
	213, 25, 213, 25, 25, 25, 49, 214, 
	25, 214, 25, 25, 25, 49, 215, 25, 
	215, 25, 25, 25, 49, 216, 25, 216, 
	25, 25, 25, 49, 217, 25, 217, 25, 
	25, 25, 49, 218, 25, 218, 25, 25, 
	25, 49, 219, 25, 219, 25, 25, 25, 
	49, 220, 25, 220, 25, 25, 25, 49, 
	210, 211, 25, 210, 211, 25, 25, 25, 
	49, 221, 25, 221, 25, 25, 25, 49, 
	222, 25, 222, 25, 25, 25, 49, 223, 
	25, 223, 25, 25, 25, 49, 224, 25, 
	224, 25, 25, 25, 49, 225, 25, 225, 
	25, 25, 25, 49, 226, 25, 226, 25, 
	25, 25, 49, 227, 25, 227, 25, 25, 
	25, 49, 228, 25, 228, 25, 25, 25, 
	49, 207, 208, 25, 207, 208, 25, 25, 
	25, 49, 175, 176, 177, 25, 175, 176, 
	177, 25, 25, 25, 49, 229, 230, 25, 
	229, 230, 25, 25, 25, 49, 231, 25, 
	231, 25, 25, 25, 49, 232, 233, 25, 
	232, 233, 25, 25, 25, 49, 235, 236, 
	237, 238, 235, 236, 237, 25, 25, 25, 
	234, 239, 25, 239, 25, 25, 25, 49, 
	240, 25, 240, 25, 25, 25, 49, 241, 
	25, 241, 25, 25, 25, 49, 242, 25, 
	242, 25, 25, 25, 49, 243, 25, 243, 
	25, 25, 25, 49, 244, 245, 244, 25, 
	25, 25, 49, 246, 25, 246, 25, 25, 
	25, 49, 247, 25, 247, 25, 25, 25, 
	49, 248, 249, 250, 248, 249, 25, 25, 
	25, 49, 251, 25, 251, 25, 25, 25, 
	49, 252, 25, 252, 25, 25, 25, 49, 
	253, 254, 253, 25, 25, 25, 49, 255, 
	25, 255, 25, 25, 25, 49, 256, 25, 
	256, 25, 25, 25, 49, 257, 25, 257, 
	25, 25, 25, 49, 258, 25, 258, 25, 
	25, 25, 49, 253, 25, 253, 25, 25, 
	25, 49, 259, 25, 259, 25, 25, 25, 
	49, 260, 25, 260, 25, 25, 25, 49, 
	261, 25, 261, 25, 25, 25, 49, 262, 
	25, 262, 25, 25, 25, 49, 263, 264, 
	263, 25, 25, 25, 49, 265, 25, 265, 
	25, 25, 25, 49, 266, 25, 266, 25, 
	25, 25, 49, 267, 268, 267, 25, 25, 
	25, 49, 269, 25, 269, 25, 25, 25, 
	49, 270, 25, 270, 25, 25, 25, 49, 
	271, 25, 271, 25, 25, 25, 49, 272, 
	25, 272, 25, 25, 25, 49, 273, 25, 
	273, 25, 25, 25, 49, 267, 25, 267, 
	25, 25, 25, 49, 263, 25, 263, 25, 
	25, 25, 49, 248, 249, 25, 248, 249, 
	25, 25, 25, 49, 244, 25, 244, 25, 
	25, 25, 49, 274, 25, 274, 25, 25, 
	25, 49, 275, 25, 275, 25, 25, 25, 
	49, 276, 277, 278, 279, 276, 277, 278, 
	25, 25, 25, 49, 280, 25, 280, 25, 
	25, 25, 49, 281, 25, 281, 25, 25, 
	25, 49, 282, 25, 282, 25, 25, 25, 
	49, 283, 25, 283, 25, 25, 25, 49, 
	284, 25, 284, 25, 25, 25, 49, 285, 
	286, 285, 25, 25, 25, 49, 287, 25, 
	287, 25, 25, 25, 49, 288, 25, 288, 
	25, 25, 25, 49, 289, 290, 289, 25, 
	25, 25, 49, 291, 25, 291, 25, 25, 
	25, 49, 292, 25, 292, 25, 25, 25, 
	49, 293, 25, 293, 25, 25, 25, 49, 
	294, 25, 294, 25, 25, 25, 49, 289, 
	25, 289, 25, 25, 25, 49, 285, 25, 
	285, 25, 25, 25, 49, 295, 25, 295, 
	25, 25, 25, 49, 296, 25, 296, 25, 
	25, 25, 49, 297, 298, 297, 25, 25, 
	25, 49, 299, 25, 299, 25, 25, 25, 
	49, 300, 25, 300, 25, 25, 25, 49, 
	301, 25, 301, 25, 25, 25, 49, 302, 
	25, 302, 25, 25, 25, 49, 297, 25, 
	297, 25, 25, 25, 49, 303, 25, 303, 
	25, 25, 25, 49, 304, 25, 304, 25, 
	25, 25, 49, 305, 25, 305, 25, 25, 
	25, 49, 306, 25, 306, 25, 25, 25, 
	49, 307, 308, 307, 25, 25, 25, 49, 
	309, 25, 309, 25, 25, 25, 49, 310, 
	25, 310, 25, 25, 25, 49, 311, 312, 
	311, 25, 25, 25, 49, 313, 25, 313, 
	25, 25, 25, 49, 314, 25, 314, 25, 
	25, 25, 49, 315, 25, 315, 25, 25, 
	25, 49, 316, 25, 316, 25, 25, 25, 
	49, 317, 25, 317, 25, 25, 25, 49, 
	311, 25, 311, 25, 25, 25, 49, 307, 
	25, 307, 25, 25, 25, 49, 276, 277, 
	278, 25, 276, 277, 278, 25, 25, 25, 
	49, 318, 25, 318, 25, 25, 25, 49, 
	319, 25, 319, 25, 25, 25, 49, 320, 
	25, 320, 25, 25, 25, 49, 321, 25, 
	321, 25, 25, 25, 49, 322, 323, 322, 
	25, 25, 25, 49, 324, 25, 324, 25, 
	25, 25, 49, 325, 25, 325, 25, 25, 
	25, 49, 326, 327, 328, 326, 327, 25, 
	25, 25, 49, 329, 25, 329, 25, 25, 
	25, 49, 330, 25, 330, 25, 25, 25, 
	49, 331, 25, 331, 25, 25, 25, 49, 
	332, 25, 332, 25, 25, 25, 49, 333, 
	25, 333, 25, 25, 25, 49, 334, 335, 
	334, 25, 25, 25, 49, 336, 25, 336, 
	25, 25, 25, 49, 337, 25, 337, 25, 
	25, 25, 49, 338, 339, 338, 25, 25, 
	25, 49, 340, 25, 340, 25, 25, 25, 
	49, 341, 25, 341, 25, 25, 25, 49, 
	342, 25, 342, 25, 25, 25, 49, 343, 
	25, 343, 25, 25, 25, 49, 338, 25, 
	338, 25, 25, 25, 49, 334, 25, 334, 
	25, 25, 25, 49, 344, 25, 344, 25, 
	25, 25, 49, 345, 25, 345, 25, 25, 
	25, 49, 346, 347, 346, 25, 25, 25, 
	49, 348, 25, 348, 25, 25, 25, 49, 
	349, 25, 349, 25, 25, 25, 49, 350, 
	25, 350, 25, 25, 25, 49, 351, 25, 
	351, 25, 25, 25, 49, 352, 25, 352, 
	25, 25, 25, 49, 346, 25, 346, 25, 
	25, 25, 49, 326, 327, 25, 326, 327, 
	25, 25, 25, 49, 322, 25, 322, 25, 
	25, 25, 49, 235, 236, 237, 25, 235, 
	236, 237, 25, 25, 25, 49, 353, 25, 
	353, 25, 25, 25, 49, 354, 25, 354, 
	25, 25, 25, 49, 355, 25, 355, 25, 
	25, 25, 49, 357, 358, 357, 25, 25, 
	25, 356, 359, 25, 359, 25, 25, 25, 
	49, 360, 25, 360, 25, 25, 25, 49, 
	361, 25, 361, 25, 25, 25, 49, 357, 
	25, 357, 25, 25, 25, 49, 362, 25, 
	362, 25, 25, 25, 49, 363, 25, 363, 
	25, 25, 25, 49, 364, 365, 25, 364, 
	365, 25, 25, 25, 49, 366, 25, 366, 
	25, 25, 25, 49, 367, 25, 367, 25, 
	25, 25, 49, 368, 25, 368, 25, 25, 
	25, 49, 369, 25, 369, 25, 25, 25, 
	49, 370, 25, 370, 25, 25, 25, 49, 
	371, 25, 371, 25, 25, 25, 49, 372, 
	25, 372, 25, 25, 25, 49, 373, 25, 
	373, 25, 25, 25, 49, 374, 375, 374, 
	25, 25, 25, 49, 376, 25, 376, 25, 
	25, 25, 49, 377, 25, 377, 25, 25, 
	25, 49, 378, 25, 378, 25, 25, 25, 
	49, 379, 25, 379, 25, 25, 25, 49, 
	374, 25, 374, 25, 25, 25, 49, 380, 
	381, 25, 380, 381, 25, 25, 25, 49, 
	382, 25, 382, 25, 25, 25, 49, 383, 
	25, 383, 25, 25, 25, 49, 384, 25, 
	384, 25, 25, 25, 49, 385, 386, 385, 
	25, 25, 25, 49, 387, 25, 387, 25, 
	25, 25, 49, 388, 25, 388, 25, 25, 
	25, 49, 389, 25, 389, 25, 25, 25, 
	49, 390, 25, 390, 25, 25, 25, 49, 
	391, 25, 391, 25, 25, 25, 49, 392, 
	393, 392, 25, 25, 25, 49, 394, 25, 
	394, 25, 25, 25, 49, 395, 25, 395, 
	25, 25, 25, 49, 396, 25, 396, 25, 
	25, 25, 49, 397, 25, 397, 25, 25, 
	25, 49, 398, 399, 398, 25, 25, 25, 
	49, 400, 25, 400, 25, 25, 25, 49, 
	401, 25, 401, 25, 25, 25, 49, 402, 
	25, 402, 25, 25, 25, 49, 398, 25, 
	398, 25, 25, 25, 49, 392, 25, 392, 
	25, 25, 25, 49, 385, 25, 385, 25, 
	25, 25, 49, 403, 404, 403, 25, 25, 
	25, 49, 405, 25, 405, 25, 25, 25, 
	49, 406, 25, 406, 25, 25, 25, 49, 
	407, 25, 407, 25, 25, 25, 49, 408, 
	25, 408, 25, 25, 25, 49, 409, 25, 
	409, 25, 25, 25, 49, 410, 25, 410, 
	25, 25, 25, 49, 411, 25, 411, 25, 
	25, 25, 49, 403, 25, 403, 25, 25, 
	25, 49, 412, 413, 414, 25, 412, 413, 
	414, 25, 25, 25, 49, 415, 25, 415, 
	25, 25, 25, 49, 416, 25, 416, 25, 
	25, 25, 49, 417, 25, 417, 25, 25, 
	25, 49, 418, 25, 418, 25, 25, 25, 
	49, 419, 25, 419, 25, 25, 25, 49, 
	420, 421, 420, 25, 25, 25, 49, 422, 
	25, 422, 25, 25, 25, 49, 423, 25, 
	423, 25, 25, 25, 49, 424, 25, 424, 
	25, 25, 25, 49, 425, 25, 425, 25, 
	25, 25, 49, 420, 25, 420, 25, 25, 
	25, 49, 426, 25, 426, 25, 25, 25, 
	49, 427, 428, 429, 430, 431, 428, 429, 
	430, 25, 25, 25, 49, 432, 433, 434, 
	432, 433, 25, 25, 25, 49, 435, 25, 
	435, 25, 25, 25, 49, 436, 25, 436, 
	25, 25, 25, 49, 437, 25, 437, 25, 
	25, 25, 49, 438, 25, 438, 25, 25, 
	25, 49, 439, 25, 439, 25, 25, 25, 
	49, 440, 25, 440, 25, 25, 25, 49, 
	441, 25, 441, 25, 25, 25, 49, 442, 
	25, 442, 25, 25, 25, 49, 432, 433, 
	25, 432, 433, 25, 25, 25, 49, 443, 
	25, 443, 25, 25, 25, 49, 444, 25, 
	444, 25, 25, 25, 49, 445, 25, 445, 
	25, 25, 25, 49, 446, 25, 446, 25, 
	25, 25, 49, 448, 449, 448, 25, 25, 
	25, 447, 450, 25, 450, 25, 25, 25, 
	49, 451, 25, 451, 25, 25, 25, 49, 
	448, 25, 448, 25, 25, 25, 49, 452, 
	25, 452, 25, 25, 25, 49, 453, 25, 
	453, 25, 25, 25, 49, 454, 25, 454, 
	25, 25, 25, 49, 455, 25, 455, 25, 
	25, 25, 49, 457, 458, 457, 25, 25, 
	25, 456, 459, 25, 459, 25, 25, 25, 
	49, 460, 25, 460, 25, 25, 25, 49, 
	461, 25, 461, 25, 25, 25, 49, 462, 
	25, 462, 25, 25, 25, 49, 457, 25, 
	457, 25, 25, 25, 49, 463, 25, 463, 
	25, 25, 25, 49, 464, 25, 464, 25, 
	25, 25, 49, 465, 25, 465, 25, 25, 
	25, 49, 466, 25, 466, 25, 25, 25, 
	49, 428, 429, 430, 25, 428, 429, 430, 
	25, 25, 25, 49, 467, 25, 467, 25, 
	25, 25, 49, 468, 25, 468, 25, 25, 
	25, 49, 469, 25, 469, 25, 25, 25, 
	49, 470, 25, 470, 25, 25, 25, 49, 
	471, 25, 471, 25, 25, 25, 49, 472, 
	25, 472, 25, 25, 25, 49, 473, 25, 
	473, 25, 25, 25, 49, 474, 25, 474, 
	25, 25, 25, 49, 475, 25, 475, 25, 
	25, 25, 49, 476, 25, 476, 25, 25, 
	25, 49, 477, 25, 477, 25, 25, 25, 
	49, 478, 25, 478, 25, 25, 25, 49, 
	10, 25, 10, 479, 25, 25, 49, 11, 
	12, 25, 11, 25, 25, 25, 49, 13, 
	1, 25, 13, 25, 25, 25, 49, 13, 
	1, 50, 51, 52, 25, 50, 51, 52, 
	13, 25, 25, 25, 49, 13, 1, 86, 
	87, 25, 86, 87, 13, 25, 25, 25, 
	49, 13, 1, 122, 25, 122, 13, 25, 
	25, 25, 49, 13, 1, 126, 25, 126, 
	13, 25, 25, 25, 49, 13, 1, 364, 
	365, 25, 364, 365, 13, 25, 25, 25, 
	49, 13, 1, 412, 413, 414, 25, 412, 
	413, 414, 13, 25, 25, 25, 49, 13, 
	1, 473, 25, 473, 13, 25, 25, 25, 
	49, 0
};

static const short _rasta_man_trans_targs[] = {
	10, 1, 2, 3, 4, 10, 10, 6, 
	15, 10, 7, 8, 10, 9, 11, 0, 
	12, 13, 14, 10, 10, 16, 50, 81, 
	85, 17, 124, 128, 178, 301, 303, 349, 
	402, 405, 408, 410, 411, 412, 413, 414, 
	415, 416, 417, 10, 10, 10, 10, 5, 
	10, 10, 18, 19, 41, 17, 17, 20, 
	21, 22, 23, 40, 24, 25, 39, 26, 
	27, 28, 29, 30, 31, 32, 33, 38, 
	34, 35, 36, 37, 17, 42, 43, 44, 
	45, 46, 47, 48, 49, 17, 51, 77, 
	52, 53, 54, 55, 60, 65, 72, 76, 
	56, 57, 58, 59, 17, 61, 62, 63, 
	64, 17, 66, 10, 67, 71, 68, 69, 
	70, 17, 73, 74, 75, 17, 78, 79, 
	80, 17, 82, 83, 84, 17, 86, 87, 
	103, 88, 89, 90, 102, 91, 92, 93, 
	94, 95, 96, 97, 101, 98, 99, 100, 
	17, 104, 105, 109, 119, 123, 106, 107, 
	108, 17, 110, 111, 112, 113, 10, 114, 
	118, 115, 116, 117, 17, 120, 121, 122, 
	17, 125, 126, 127, 17, 129, 130, 131, 
	142, 155, 177, 132, 133, 134, 135, 136, 
	141, 137, 138, 139, 140, 17, 143, 144, 
	145, 146, 150, 154, 147, 148, 149, 17, 
	151, 152, 153, 17, 156, 157, 158, 168, 
	172, 176, 159, 163, 167, 160, 161, 162, 
	17, 164, 165, 166, 17, 169, 170, 171, 
	17, 173, 174, 175, 17, 179, 180, 17, 
	181, 293, 10, 182, 216, 258, 292, 183, 
	184, 185, 186, 187, 188, 215, 189, 190, 
	191, 199, 214, 192, 193, 194, 198, 195, 
	196, 197, 17, 200, 201, 202, 203, 204, 
	213, 205, 206, 207, 212, 208, 209, 210, 
	211, 17, 217, 218, 219, 234, 242, 257, 
	220, 221, 222, 223, 224, 225, 233, 226, 
	227, 228, 232, 229, 230, 231, 17, 235, 
	236, 237, 241, 238, 239, 240, 17, 243, 
	244, 245, 246, 247, 256, 248, 249, 250, 
	255, 251, 252, 253, 254, 17, 259, 260, 
	261, 262, 263, 291, 264, 265, 266, 281, 
	290, 267, 268, 269, 270, 271, 272, 280, 
	273, 274, 275, 279, 276, 277, 278, 17, 
	282, 283, 284, 289, 285, 286, 287, 288, 
	17, 294, 295, 296, 10, 297, 300, 298, 
	299, 17, 302, 17, 304, 318, 305, 306, 
	307, 308, 309, 310, 311, 312, 313, 317, 
	314, 315, 316, 17, 319, 340, 320, 321, 
	322, 323, 339, 324, 325, 326, 327, 328, 
	329, 338, 330, 331, 332, 333, 334, 337, 
	335, 336, 17, 341, 348, 342, 343, 344, 
	345, 346, 347, 17, 350, 361, 396, 351, 
	352, 353, 354, 355, 356, 360, 357, 358, 
	359, 17, 362, 363, 373, 381, 391, 395, 
	364, 368, 372, 365, 366, 367, 17, 369, 
	370, 371, 17, 374, 375, 376, 377, 10, 
	378, 380, 379, 17, 382, 383, 384, 385, 
	10, 386, 390, 387, 388, 389, 17, 392, 
	393, 394, 17, 397, 398, 399, 400, 401, 
	17, 403, 404, 17, 406, 407, 17, 409
};

static const unsigned char _rasta_man_trans_actions[] = {
	41, 0, 0, 0, 0, 15, 37, 0, 
	181, 39, 0, 0, 5, 0, 0, 0, 
	187, 178, 0, 11, 13, 0, 0, 0, 
	0, 184, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 184, 184, 184, 184, 184, 
	184, 184, 184, 7, 9, 35, 29, 0, 
	31, 33, 0, 0, 0, 166, 64, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 103, 0, 0, 0, 
	0, 0, 0, 0, 0, 88, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 106, 0, 0, 0, 
	0, 148, 0, 23, 0, 0, 0, 0, 
	0, 115, 0, 0, 0, 52, 0, 0, 
	0, 97, 0, 0, 0, 91, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	46, 0, 0, 0, 0, 0, 0, 0, 
	0, 133, 0, 0, 0, 0, 21, 0, 
	0, 0, 0, 0, 112, 0, 0, 0, 
	139, 0, 0, 0, 58, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 151, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 136, 
	0, 0, 0, 142, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	163, 0, 0, 0, 157, 0, 0, 0, 
	130, 0, 0, 0, 127, 0, 0, 175, 
	0, 0, 27, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 79, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 82, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 85, 0, 
	0, 0, 0, 0, 0, 0, 67, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 70, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 73, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	76, 0, 0, 0, 17, 0, 0, 0, 
	0, 100, 0, 121, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 49, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 118, 0, 0, 0, 0, 0, 
	0, 0, 0, 172, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 160, 0, 
	0, 0, 154, 0, 0, 0, 0, 25, 
	0, 0, 0, 145, 0, 0, 0, 0, 
	19, 0, 0, 0, 0, 0, 109, 0, 
	0, 0, 124, 0, 0, 0, 0, 0, 
	169, 0, 0, 61, 0, 0, 94, 3
};

static const unsigned char _rasta_man_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 43, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0
};

static const unsigned char _rasta_man_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0
};

static const short _rasta_man_eof_trans[] = {
	0, 1, 1, 1, 1, 7, 1, 10, 
	10, 1, 0, 46, 46, 47, 47, 49, 
	50, 1, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 108, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 159, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 235, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	357, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 448, 50, 50, 50, 50, 50, 50, 
	50, 457, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50, 50, 50, 50, 50, 50, 50, 
	50, 50
};

static const int rasta_man_start = 10;
static const int rasta_man_first_final = 10;
static const int rasta_man_error = 0;

static const int rasta_man_en_main = 10;


#line 15 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"


extern char* make_string(const char* ts, const char* te);
extern int make_hex(const char* ts, const char* te);

int parse_tokens(Tokens& tokens, char* str)
{
  char *p = str, *pe = str + strlen(str);
  int cs, act = 0;
  char *ts, *te, *tm = 0, *eof = 0;  

  
#line 1421 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
	{
	cs = rasta_man_start;
	ts = 0;
	te = 0;
	act = 0;
	}

#line 1427 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
	{
	int _klen;
	unsigned int _trans;
	const char *_acts;
	unsigned int _nacts;
	const char *_keys;

	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _rasta_man_actions + _rasta_man_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 2:
#line 1 "NONE"
	{ts = p;}
	break;
#line 1446 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

	_keys = _rasta_man_trans_keys + _rasta_man_key_offsets[cs];
	_trans = _rasta_man_index_offsets[cs];

	_klen = _rasta_man_single_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + ((_upper-_lower) >> 1);
			if ( (*p) < *_mid )
				_upper = _mid - 1;
			else if ( (*p) > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}

	_klen = _rasta_man_range_lengths[cs];
	if ( _klen > 0 ) {
		const char *_lower = _keys;
		const char *_mid;
		const char *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;

			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( (*p) < _mid[0] )
				_upper = _mid - 2;
			else if ( (*p) > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += ((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}

_match:
	_trans = _rasta_man_indicies[_trans];
_eof_trans:
	cs = _rasta_man_trans_targs[_trans];

	if ( _rasta_man_trans_actions[_trans] == 0 )
		goto _again;

	_acts = _rasta_man_actions + _rasta_man_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 3:
#line 1 "NONE"
	{te = p+1;}
	break;
	case 4:
#line 166 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 6;}
	break;
	case 5:
#line 167 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 7;}
	break;
	case 6:
#line 168 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 8;}
	break;
	case 7:
#line 169 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 9;}
	break;
	case 8:
#line 171 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 10;}
	break;
	case 9:
#line 172 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 11;}
	break;
	case 10:
#line 174 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 12;}
	break;
	case 11:
#line 176 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 13;}
	break;
	case 12:
#line 177 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 14;}
	break;
	case 13:
#line 178 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 15;}
	break;
	case 14:
#line 179 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 16;}
	break;
	case 15:
#line 180 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 17;}
	break;
	case 16:
#line 181 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 18;}
	break;
	case 17:
#line 182 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 19;}
	break;
	case 18:
#line 183 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 20;}
	break;
	case 19:
#line 185 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 21;}
	break;
	case 20:
#line 186 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 22;}
	break;
	case 21:
#line 188 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 24;}
	break;
	case 22:
#line 189 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 25;}
	break;
	case 23:
#line 191 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 26;}
	break;
	case 24:
#line 192 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 27;}
	break;
	case 25:
#line 197 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 31;}
	break;
	case 26:
#line 198 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 32;}
	break;
	case 27:
#line 199 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 33;}
	break;
	case 28:
#line 200 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 34;}
	break;
	case 29:
#line 203 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 36;}
	break;
	case 30:
#line 204 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 37;}
	break;
	case 31:
#line 205 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 38;}
	break;
	case 32:
#line 207 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 40;}
	break;
	case 33:
#line 208 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 41;}
	break;
	case 34:
#line 209 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 42;}
	break;
	case 35:
#line 210 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 43;}
	break;
	case 36:
#line 211 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 44;}
	break;
	case 37:
#line 212 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 45;}
	break;
	case 38:
#line 213 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 46;}
	break;
	case 39:
#line 214 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 47;}
	break;
	case 40:
#line 215 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 48;}
	break;
	case 41:
#line 216 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 49;}
	break;
	case 42:
#line 217 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 50;}
	break;
	case 43:
#line 218 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 51;}
	break;
	case 44:
#line 220 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 52;}
	break;
	case 45:
#line 221 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 53;}
	break;
	case 46:
#line 222 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 54;}
	break;
	case 47:
#line 224 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 56;}
	break;
	case 48:
#line 226 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 57;}
	break;
	case 49:
#line 227 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 58;}
	break;
	case 50:
#line 228 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 59;}
	break;
	case 51:
#line 231 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{act = 60;}
	break;
	case 52:
#line 159 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(INDEX, atoi(ts+1))); }}
	break;
	case 53:
#line 160 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(L_BRACE, 0)); }}
	break;
	case 54:
#line 161 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(R_BRACE, 0)); }}
	break;
	case 55:
#line 162 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(SEMI_COLON, 0)); }}
	break;
	case 56:
#line 163 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(ASSIGN, 0)); }}
	break;
	case 57:
#line 202 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p+1;{ tokens.push_back(Token(ASSIGN, 0)); tokens.push_back(Token(BLEND_V, D3D11_BLEND_ZERO)); }}
	break;
	case 58:
#line 187 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_MIRROR)); }}
	break;
	case 59:
#line 193 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(SRC_BLEND_K,0));}}
	break;
	case 60:
#line 194 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(DEST_BLEND_K,0));}}
	break;
	case 61:
#line 195 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_OP_K,0));}}
	break;
	case 62:
#line 206 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_ALPHA)); }}
	break;
	case 63:
#line 223 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_MIN)); }}
	break;
	case 64:
#line 226 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(VALUE, atoi(ts))); }}
	break;
	case 65:
#line 227 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(VALUE, make_hex(ts, te))); }}
	break;
	case 66:
#line 228 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ tokens.push_back(Token(ID, (int)make_string(ts, te))); }}
	break;
	case 67:
#line 231 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{te = p;p--;{ }}
	break;
	case 68:
#line 226 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{{p = ((te))-1;}{ tokens.push_back(Token(VALUE, atoi(ts))); }}
	break;
	case 69:
#line 228 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"
	{{p = ((te))-1;}{ tokens.push_back(Token(ID, (int)make_string(ts, te))); }}
	break;
	case 70:
#line 1 "NONE"
	{	switch( act ) {
	case 0:
	{{cs = 0; goto _again;}}
	break;
	case 6:
	{{p = ((te))-1;} tokens.push_back(Token(DEPTH_STENCIL_STATE_K,0));}
	break;
	case 7:
	{{p = ((te))-1;} tokens.push_back(Token(RASTERIZER_STATE_K,0));}
	break;
	case 8:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_STATE_K,0));}
	break;
	case 9:
	{{p = ((te))-1;} tokens.push_back(Token(SAMPLER_STATE_K,0));}
	break;
	case 10:
	{{p = ((te))-1;} tokens.push_back(Token(BOOL_V, 0)); }
	break;
	case 11:
	{{p = ((te))-1;} tokens.push_back(Token(BOOL_V, 1)); }
	break;
	case 12:
	{{p = ((te))-1;} tokens.push_back(Token(DEPTH_WRITE_MASK_V, D3D11_DEPTH_WRITE_MASK_ALL)); }
	break;
	case 13:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_MIP_POINT)); }
	break;
	case 14:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_POINT_MIP_LINEAR)); }
	break;
	case 15:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT)); }
	break;
	case 16:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)); }
	break;
	case 17:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_MIP_POINT)); }
	break;
	case 18:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR)); }
	break;
	case 19:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_MIN_MAG_LINEAR_MIP_POINT)); }
	break;
	case 20:
	{{p = ((te))-1;} tokens.push_back(Token(FILTER_V, D3D11_FILTER_ANISOTROPIC)); }
	break;
	case 21:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_CLAMP)); }
	break;
	case 22:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_WRAP)); }
	break;
	case 24:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_BORDER)); }
	break;
	case 25:
	{{p = ((te))-1;} tokens.push_back(Token(ADDRESS_V, D3D11_TEXTURE_ADDRESS_MIRROR_ONCE)); }
	break;
	case 26:
	{{p = ((te))-1;} tokens.push_back(Token(ALPHA_TO_COVERAGE_ENABLE_K,0));}
	break;
	case 27:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_ENABLE_K,0));}
	break;
	case 31:
	{{p = ((te))-1;} tokens.push_back(Token(SRC_BLEND_ALPHA_K,0));}
	break;
	case 32:
	{{p = ((te))-1;} tokens.push_back(Token(DEST_BLEND_ALPHA_K,0));}
	break;
	case 33:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_ALPHA_K,0));}
	break;
	case 34:
	{{p = ((te))-1;} tokens.push_back(Token(RENDER_TARGET_WRITE_MASK_K,0));}
	break;
	case 36:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_ONE)); }
	break;
	case 37:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_COLOR)); }
	break;
	case 38:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC_COLOR)); }
	break;
	case 40:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC_ALPHA)); }
	break;
	case 41:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_DEST_ALPHA)); }
	break;
	case 42:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_DEST_ALPHA)); }
	break;
	case 43:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_DEST_COLOR)); }
	break;
	case 44:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_DEST_COLOR)); }
	break;
	case 45:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC_ALPHA_SAT)); }
	break;
	case 46:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_BLEND_FACTOR)); }
	break;
	case 47:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_BLEND_FACTOR)); }
	break;
	case 48:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC1_COLOR)); }
	break;
	case 49:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC1_COLOR)); }
	break;
	case 50:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_SRC1_ALPHA)); }
	break;
	case 51:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_V, D3D11_BLEND_INV_SRC1_ALPHA)); }
	break;
	case 52:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_ADD)); }
	break;
	case 53:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_SUBTRACT)); }
	break;
	case 54:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_REV_SUBTRACT)); }
	break;
	case 56:
	{{p = ((te))-1;} tokens.push_back(Token(BLEND_OP_V, D3D11_BLEND_OP_MAX)); }
	break;
	case 57:
	{{p = ((te))-1;} tokens.push_back(Token(VALUE, atoi(ts))); }
	break;
	case 58:
	{{p = ((te))-1;} tokens.push_back(Token(VALUE, make_hex(ts, te))); }
	break;
	case 59:
	{{p = ((te))-1;} tokens.push_back(Token(ID, (int)make_string(ts, te))); }
	break;
	case 60:
	{{p = ((te))-1;} }
	break;
	}
	}
	break;
#line 1864 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

_again:
	_acts = _rasta_man_actions + _rasta_man_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
#line 1 "NONE"
	{ts = 0;}
	break;
	case 1:
#line 1 "NONE"
	{act = 0;}
	break;
#line 1878 "d:\\projects\\shindig\\shindig\\parser\\state_parser_lexer.cpp"
		}
	}

	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == eof )
	{
	if ( _rasta_man_eof_trans[cs] > 0 ) {
		_trans = _rasta_man_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}

	_out: {}
	}

#line 236 "d:\\projects\\shindig\\shindig\\parser\\parser.rl"

 
  return 1;
}

